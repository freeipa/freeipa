command: aci_add/1
args: 1,15,3
arg: Str('aciname', cli_name='name')
option: StrEnum('aciprefix', cli_name='prefix', values=[u'permission', u'delegation', u'selfservice', u'none'])
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', cli_name='attrs')
option: Str('filter?', cli_name='filter')
option: Str('group?', cli_name='group')
option: Str('memberof?', cli_name='memberof')
option: Str('permission?', cli_name='permission')
option: Str('permissions+', cli_name='permissions')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('selfaci?', autofill=True, cli_name='self', default=False)
option: Str('subtree?', cli_name='subtree')
option: Str('targetgroup?', cli_name='targetgroup')
option: Flag('test?', autofill=True, default=False)
option: StrEnum('type?', cli_name='type', values=[u'user', u'group', u'host', u'service', u'hostgroup', u'netgroup', u'dnsrecord'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: aci_del/1
args: 1,2,3
arg: Str('aciname', cli_name='name')
option: StrEnum('aciprefix', cli_name='prefix', values=[u'permission', u'delegation', u'selfservice', u'none'])
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: aci_find/1
args: 1,16,4
arg: Str('criteria?')
option: Str('aciname?', autofill=False, cli_name='name')
option: StrEnum('aciprefix?', cli_name='prefix', values=[u'permission', u'delegation', u'selfservice', u'none'])
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', autofill=False, cli_name='attrs')
option: Str('filter?', autofill=False, cli_name='filter')
option: Str('group?', autofill=False, cli_name='group')
option: Str('memberof?', autofill=False, cli_name='memberof')
option: Str('permission?', autofill=False, cli_name='permission')
option: Str('permissions*', autofill=False, cli_name='permissions')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Bool('selfaci?', autofill=False, cli_name='self', default=False)
option: Str('subtree?', autofill=False, cli_name='subtree')
option: Str('targetgroup?', autofill=False, cli_name='targetgroup')
option: StrEnum('type?', autofill=False, cli_name='type', values=[u'user', u'group', u'host', u'service', u'hostgroup', u'netgroup', u'dnsrecord'])
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: aci_mod/1
args: 1,14,3
arg: Str('aciname', cli_name='name')
option: StrEnum('aciprefix', cli_name='prefix', values=[u'permission', u'delegation', u'selfservice', u'none'])
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', autofill=False, cli_name='attrs')
option: Str('filter?', autofill=False, cli_name='filter')
option: Str('group?', autofill=False, cli_name='group')
option: Str('memberof?', autofill=False, cli_name='memberof')
option: Str('permission?', autofill=False, cli_name='permission')
option: Str('permissions*', autofill=False, cli_name='permissions')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('selfaci?', autofill=True, cli_name='self', default=False)
option: Str('subtree?', autofill=False, cli_name='subtree')
option: Str('targetgroup?', autofill=False, cli_name='targetgroup')
option: StrEnum('type?', autofill=False, cli_name='type', values=[u'user', u'group', u'host', u'service', u'hostgroup', u'netgroup', u'dnsrecord'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: aci_rename/1
args: 1,15,3
arg: Str('aciname', cli_name='name')
option: StrEnum('aciprefix', cli_name='prefix', values=[u'permission', u'delegation', u'selfservice', u'none'])
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', autofill=False, cli_name='attrs')
option: Str('filter?', autofill=False, cli_name='filter')
option: Str('group?', autofill=False, cli_name='group')
option: Str('memberof?', autofill=False, cli_name='memberof')
option: Str('newname')
option: Str('permission?', autofill=False, cli_name='permission')
option: Str('permissions*', autofill=False, cli_name='permissions')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('selfaci?', autofill=True, cli_name='self', default=False)
option: Str('subtree?', autofill=False, cli_name='subtree')
option: Str('targetgroup?', autofill=False, cli_name='targetgroup')
option: StrEnum('type?', autofill=False, cli_name='type', values=[u'user', u'group', u'host', u'service', u'hostgroup', u'netgroup', u'dnsrecord'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: aci_show/1
args: 1,5,3
arg: Str('aciname', cli_name='name')
option: StrEnum('aciprefix', cli_name='prefix', values=[u'permission', u'delegation', u'selfservice', u'none'])
option: Flag('all', autofill=True, cli_name='all', default=False)
option: DNParam('location?')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: adtrust_is_enabled/1
args: 0,1,1
option: Str('version?')
output: Output('result')
command: automember_add/1
args: 1,7,3
arg: Str('cn', cli_name='automember_rule')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automember_add_condition/1
args: 1,8,5
arg: Str('cn', cli_name='automember_rule')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('automemberexclusiveregex*', alwaysask=True, cli_name='exclusive_regex')
option: Str('automemberinclusiveregex*', alwaysask=True, cli_name='inclusive_regex')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('key')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automember_default_group_remove/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: automember_default_group_set/1
args: 0,5,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('automemberdefaultgroup', cli_name='default_group')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: automember_default_group_show/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: automember_del/1
args: 1,2,3
arg: Str('cn+', cli_name='automember_rule')
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: automember_find/1
args: 1,6,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: automember_find_orphans/1
args: 1,7,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('remove?', autofill=True, default=False)
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: automember_mod/1
args: 1,9,3
arg: Str('cn', cli_name='automember_rule')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automember_rebuild/1
args: 0,7,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('hosts*')
option: Flag('no_wait?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('type?', values=[u'group', u'hostgroup'])
option: Str('users*')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automember_remove_condition/1
args: 1,8,5
arg: Str('cn', cli_name='automember_rule')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('automemberexclusiveregex*', alwaysask=True, cli_name='exclusive_regex')
option: Str('automemberinclusiveregex*', alwaysask=True, cli_name='inclusive_regex')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('key')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automember_show/1
args: 1,4,3
arg: Str('cn', cli_name='automember_rule')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('type', values=[u'group', u'hostgroup'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automountkey_add/1
args: 2,7,3
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapautomountmapname', cli_name='automountmap')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: IA5Str('automountinformation', cli_name='info')
option: IA5Str('automountkey', cli_name='key')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automountkey_del/1
args: 2,4,3
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapautomountmapname', cli_name='automountmap')
option: IA5Str('automountinformation?', cli_name='info')
option: IA5Str('automountkey', cli_name='key')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: automountkey_find/1
args: 3,7,4
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapautomountmapname', cli_name='automountmap')
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: IA5Str('automountinformation?', autofill=False, cli_name='info')
option: IA5Str('automountkey?', autofill=False, cli_name='key')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: automountkey_mod/1
args: 2,11,3
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapautomountmapname', cli_name='automountmap')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: IA5Str('automountinformation?', autofill=False, cli_name='info')
option: IA5Str('automountkey', alwaysask=False, cli_name='key')
option: Str('delattr*', cli_name='delattr')
option: IA5Str('newautomountinformation?', cli_name='newinfo')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automountkey_show/1
args: 2,6,3
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapautomountmapname', cli_name='automountmap')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: IA5Str('automountinformation?', cli_name='info')
option: IA5Str('automountkey', cli_name='key')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automountlocation_add/1
args: 1,5,3
arg: Str('cn', cli_name='location')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automountlocation_del/1
args: 1,2,3
arg: Str('cn+', cli_name='location')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: automountlocation_find/1
args: 1,7,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='location')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: automountlocation_show/1
args: 1,4,3
arg: Str('cn', cli_name='location')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automountlocation_tofiles/1
args: 1,1,1
arg: Str('cn', cli_name='location')
option: Str('version?')
output: Output('result')
command: automountmap_add/1
args: 2,6,3
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapname', cli_name='map')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automountmap_add_indirect/1
args: 2,8,3
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapname', cli_name='map')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Str('key', cli_name='mount')
option: Str('parentmap?', autofill=True, cli_name='parentmap', default=u'auto.master')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automountmap_del/1
args: 2,2,3
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapname+', cli_name='map')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: automountmap_find/1
args: 2,8,4
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: IA5Str('automountmapname?', autofill=False, cli_name='map')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: automountmap_mod/1
args: 2,8,3
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapname', cli_name='map')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: automountmap_show/1
args: 2,4,3
arg: Str('automountlocationcn', cli_name='automountlocation')
arg: IA5Str('automountmapname', cli_name='map')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: batch/1
args: 1,2,2
arg: Dict('methods*')
option: Str('keeponly*')
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: Output('results', type=[<type 'list'>, <type 'tuple'>])
command: ca_add/1
args: 1,8,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('chain', autofill=True, default=False)
option: Str('description?', cli_name='desc')
option: DNParam('ipacasubjectdn', cli_name='subject')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: ca_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: ca_disable/1
args: 1,1,3
arg: Str('cn', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: ca_enable/1
args: 1,1,3
arg: Str('cn', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: ca_find/1
args: 1,12,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('ipacaid?', autofill=False, cli_name='id')
option: DNParam('ipacaissuerdn?', autofill=False, cli_name='issuer')
option: Int('ipacarandomserialnumberversion?', autofill=False, cli_name='randomserialnumberversion')
option: DNParam('ipacasubjectdn?', autofill=False, cli_name='subject')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: ca_is_enabled/1
args: 0,1,3
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: ca_mod/1
args: 1,9,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: ca_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('chain', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: caacl_add/1
args: 1,13,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: StrEnum('hostcategory?', cli_name='hostcat', values=[u'all'])
option: StrEnum('ipacacategory?', cli_name='cacat', values=[u'all'])
option: StrEnum('ipacertprofilecategory?', cli_name='profilecat', values=[u'all'])
option: Bool('ipaenabledflag?')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('servicecategory?', cli_name='servicecat', values=[u'all'])
option: Str('setattr*', cli_name='setattr')
option: StrEnum('usercategory?', cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: caacl_add_ca/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('ca*', alwaysask=True, cli_name='cas')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_add_host/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_add_profile/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('certprofile*', alwaysask=True, cli_name='certprofiles')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_add_service/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('service*', alwaysask=True, cli_name='services')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_add_user/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: caacl_disable/1
args: 1,1,3
arg: Str('cn', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: caacl_enable/1
args: 1,1,3
arg: Str('cn', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: caacl_find/1
args: 1,15,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: StrEnum('ipacacategory?', autofill=False, cli_name='cacat', values=[u'all'])
option: StrEnum('ipacertprofilecategory?', autofill=False, cli_name='profilecat', values=[u'all'])
option: Bool('ipaenabledflag?', autofill=False)
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('servicecategory?', autofill=False, cli_name='servicecat', values=[u'all'])
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: caacl_mod/1
args: 1,15,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: StrEnum('ipacacategory?', autofill=False, cli_name='cacat', values=[u'all'])
option: StrEnum('ipacertprofilecategory?', autofill=False, cli_name='profilecat', values=[u'all'])
option: Bool('ipaenabledflag?', autofill=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: StrEnum('servicecategory?', autofill=False, cli_name='servicecat', values=[u'all'])
option: Str('setattr*', cli_name='setattr')
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: caacl_remove_ca/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('ca*', alwaysask=True, cli_name='cas')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_remove_host/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_remove_profile/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('certprofile*', alwaysask=True, cli_name='certprofiles')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_remove_service/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('service*', alwaysask=True, cli_name='services')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_remove_user/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: caacl_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: cert_find/1
args: 1,30,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cacn?', cli_name='ca')
option: Certificate('certificate?', autofill=False)
option: Flag('exactly?', autofill=True, default=False)
option: Str('host*', cli_name='hosts')
option: DateTime('issuedon_from?', autofill=False)
option: DateTime('issuedon_to?', autofill=False)
option: DNParam('issuer?', autofill=False)
option: SerialNumber('max_serial_number?', autofill=False)
option: SerialNumber('min_serial_number?', autofill=False)
option: Str('no_host*', cli_name='no_hosts')
option: Flag('no_members', autofill=True, default=True)
option: Principal('no_service*', cli_name='no_services')
option: Str('no_user*', cli_name='no_users')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('revocation_reason?', autofill=False)
option: DateTime('revokedon_from?', autofill=False)
option: DateTime('revokedon_to?', autofill=False)
option: Principal('service*', cli_name='services')
option: Int('sizelimit?')
option: StrEnum('status?', values=[u'VALID', u'INVALID', u'REVOKED', u'EXPIRED', u'REVOKED_EXPIRED'])
option: Str('subject?', autofill=False)
option: Int('timelimit?')
option: Str('user*', cli_name='users')
option: DateTime('validnotafter_from?', autofill=False)
option: DateTime('validnotafter_to?', autofill=False)
option: DateTime('validnotbefore_from?', autofill=False)
option: DateTime('validnotbefore_to?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: cert_remove_hold/1
args: 1,2,1
arg: SerialNumber('serial_number')
option: Str('cacn?', autofill=True, cli_name='ca', default=u'ipa')
option: Str('version?')
output: Output('result')
command: cert_request/1
args: 1,9,3
arg: CertificateSigningRequest('csr', cli_name='csr_file')
option: Flag('add', autofill=True, default=False)
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cacn?', autofill=True, cli_name='ca', default=u'ipa')
option: Flag('chain', autofill=True, default=False)
option: Principal('principal')
option: Str('profile_id?')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('request_type', autofill=True, default=u'pkcs10')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: cert_revoke/1
args: 1,3,1
arg: SerialNumber('serial_number')
option: Str('cacn?', autofill=True, cli_name='ca', default=u'ipa')
option: Int('revocation_reason', autofill=True, default=0)
option: Str('version?')
output: Output('result')
command: cert_show/1
args: 1,7,3
arg: SerialNumber('serial_number')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cacn?', autofill=True, cli_name='ca', default=u'ipa')
option: Flag('chain', autofill=True, default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('out?')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: cert_status/1
args: 1,4,3
arg: Str('request_id')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cacn?', autofill=True, cli_name='ca', default=u'ipa')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certmap_match/1
args: 1,3,4
arg: Certificate('certificate', cli_name='certificate')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: certmapconfig_mod/1
args: 0,8,3
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Bool('ipacertmappromptusername?', autofill=False, cli_name='promptusername')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certmapconfig_show/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certmaprule_add/1
args: 1,11,3
arg: Str('cn', cli_name='rulename')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: DNSNameParam('associateddomain*', cli_name='domain')
option: Str('description?', cli_name='desc')
option: Str('ipacertmapmaprule?', cli_name='maprule')
option: Str('ipacertmapmatchrule?', cli_name='matchrule')
option: Int('ipacertmappriority?', cli_name='priority')
option: Flag('ipaenabledflag?', autofill=True, default=True)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certmaprule_del/1
args: 1,2,3
arg: Str('cn+', cli_name='rulename')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: certmaprule_disable/1
args: 1,1,3
arg: Str('cn', cli_name='rulename')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certmaprule_enable/1
args: 1,1,3
arg: Str('cn', cli_name='rulename')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certmaprule_find/1
args: 1,13,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: DNSNameParam('associateddomain*', autofill=False, cli_name='domain')
option: Str('cn?', autofill=False, cli_name='rulename')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('ipacertmapmaprule?', autofill=False, cli_name='maprule')
option: Str('ipacertmapmatchrule?', autofill=False, cli_name='matchrule')
option: Int('ipacertmappriority?', autofill=False, cli_name='priority')
option: Bool('ipaenabledflag?', autofill=False, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: certmaprule_mod/1
args: 1,13,3
arg: Str('cn', cli_name='rulename')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: DNSNameParam('associateddomain*', autofill=False, cli_name='domain')
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('ipacertmapmaprule?', autofill=False, cli_name='maprule')
option: Str('ipacertmapmatchrule?', autofill=False, cli_name='matchrule')
option: Int('ipacertmappriority?', autofill=False, cli_name='priority')
option: Flag('ipaenabledflag?', autofill=True, default=True)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certmaprule_show/1
args: 1,4,3
arg: Str('cn', cli_name='rulename')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certprofile_del/1
args: 1,2,3
arg: Str('cn+', cli_name='id')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: certprofile_find/1
args: 1,9,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='id')
option: Str('description?', autofill=False, cli_name='desc')
option: Bool('ipacertprofilestoreissued?', autofill=False, cli_name='store', default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: certprofile_import/1
args: 1,6,3
arg: Str('cn', cli_name='id')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description', cli_name='desc')
option: Str('file', cli_name='file')
option: Bool('ipacertprofilestoreissued', cli_name='store', default=True)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certprofile_mod/1
args: 1,10,3
arg: Str('cn', cli_name='id')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('file?', cli_name='file')
option: Bool('ipacertprofilestoreissued?', autofill=False, cli_name='store', default=True)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: certprofile_show/1
args: 1,5,3
arg: Str('cn', cli_name='id')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('out?')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: class_find/1
args: 1,4,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: class_show/1
args: 1,3,3
arg: Str('full_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: command_defaults/1
args: 1,3,1
arg: Str('full_name')
option: Dict('kw?')
option: Str('params*')
option: Str('version?')
output: Output('result')
command: command_find/1
args: 1,4,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: command_show/1
args: 1,3,3
arg: Str('full_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: compat_is_enabled/1
args: 0,1,1
option: Str('version?')
output: Output('result')
command: config_mod/1
args: 0,32,3
option: Flag('add_sids?', autofill=True, default=False)
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('ca_renewal_master_server?', autofill=False)
option: Str('delattr*', cli_name='delattr')
option: Flag('enable_sid?', autofill=True, default=False)
option: StrEnum('ipaconfigstring*', autofill=False, cli_name='ipaconfigstring', values=[u'AllowNThash', u'KDC:Disable Last Success', u'KDC:Disable Lockout', u'KDC:Disable Default Preauth for SPNs', u'EnforceLDAPOTP', u'SubID:Disable'])
option: Str('ipadefaultemaildomain?', autofill=False, cli_name='emaildomain')
option: Str('ipadefaultloginshell?', autofill=False, cli_name='defaultshell')
option: Str('ipadefaultprimarygroup?', autofill=False, cli_name='defaultgroup')
option: Str('ipadomainresolutionorder?', autofill=False, cli_name='domain_resolution_order')
option: Str('ipagroupobjectclasses*', autofill=False, cli_name='groupobjectclasses')
option: IA5Str('ipagroupsearchfields?', autofill=False, cli_name='groupsearch')
option: IA5Str('ipahomesrootdir?', autofill=False, cli_name='homedirectory')
option: StrEnum('ipakrbauthzdata*', autofill=False, cli_name='pac_type', values=[u'MS-PAC', u'PAD', u'nfs:NONE'])
option: Int('ipamaxhostnamelength?', autofill=False, cli_name='maxhostname')
option: Int('ipamaxusernamelength?', autofill=False, cli_name='maxusername')
option: Bool('ipamigrationenabled?', autofill=False, cli_name='enable_migration')
option: Int('ipapwdexpadvnotify?', autofill=False, cli_name='pwdexpnotify')
option: Int('ipasearchrecordslimit?', autofill=False, cli_name='searchrecordslimit')
option: Int('ipasearchtimelimit?', autofill=False, cli_name='searchtimelimit')
option: Str('ipaselinuxusermapdefault?', autofill=False)
option: Str('ipaselinuxusermaporder?', autofill=False)
option: StrEnum('ipauserauthtype*', autofill=False, cli_name='user_auth_type', values=[u'password', u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey', u'disabled'])
option: Bool('ipauserdefaultsubordinateid?', autofill=False, cli_name='user_default_subid')
option: Str('ipauserobjectclasses*', autofill=False, cli_name='userobjectclasses')
option: IA5Str('ipausersearchfields?', autofill=False, cli_name='usersearch')
option: Str('netbios_name?', autofill=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: config_show/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: cosentry_add/1
args: 1,7,3
arg: Str('cn')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Int('cospriority')
option: DNParam('krbpwdpolicyreference')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: cosentry_del/1
args: 1,2,3
arg: Str('cn+')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: cosentry_find/1
args: 1,9,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False)
option: Int('cospriority?', autofill=False)
option: DNParam('krbpwdpolicyreference?', autofill=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: cosentry_mod/1
args: 1,9,3
arg: Str('cn')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Int('cospriority?', autofill=False)
option: Str('delattr*', cli_name='delattr')
option: DNParam('krbpwdpolicyreference?', autofill=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: cosentry_show/1
args: 1,4,3
arg: Str('cn')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: delegation_add/1
args: 1,7,3
arg: Str('aciname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs+', cli_name='attrs')
option: Str('group', cli_name='group')
option: Str('memberof', cli_name='membergroup')
option: Str('permissions*', cli_name='permissions')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: delegation_del/1
args: 1,1,3
arg: Str('aciname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: delegation_find/1
args: 1,9,4
arg: Str('criteria?')
option: Str('aciname?', autofill=False, cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', autofill=False, cli_name='attrs')
option: Str('group?', autofill=False, cli_name='group')
option: Str('memberof?', autofill=False, cli_name='membergroup')
option: Str('permissions*', autofill=False, cli_name='permissions')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: delegation_mod/1
args: 1,7,3
arg: Str('aciname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', autofill=False, cli_name='attrs')
option: Str('group?', autofill=False, cli_name='group')
option: Str('memberof?', autofill=False, cli_name='membergroup')
option: Str('permissions*', autofill=False, cli_name='permissions')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: delegation_show/1
args: 1,3,3
arg: Str('aciname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dns_is_enabled/1
args: 0,1,3
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dns_resolve/1
args: 1,1,3
arg: Str('hostname')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: dns_update_system_records/1
args: 0,4,2
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('dry_run', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('value', type=[<type 'bool'>])
command: dnsconfig_mod/1
args: 0,11,3
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Bool('idnsallowsyncptr?', autofill=False, cli_name='allow_sync_ptr')
option: Str('idnsforwarders*', autofill=False, cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', autofill=False, cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: Int('idnszonerefresh?', autofill=False, cli_name='zone_refresh', deprecated=True)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsconfig_show/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsforwardzone_add/1
args: 1,9,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('idnsforwarders*', cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: Str('name_from_ip?')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Flag('skip_overlap_check', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsforwardzone_add_permission/1
args: 1,1,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: dnsforwardzone_del/1
args: 1,2,3
arg: DNSNameParam('idnsname+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: dnsforwardzone_disable/1
args: 1,1,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsforwardzone_enable/1
args: 1,1,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsforwardzone_find/1
args: 1,11,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('idnsforwarders*', autofill=False, cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', autofill=False, cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: DNSNameParam('idnsname?', autofill=False, cli_name='name')
option: Bool('idnszoneactive?', autofill=False, cli_name='zone_active')
option: Str('name_from_ip?', autofill=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: dnsforwardzone_mod/1
args: 1,10,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('idnsforwarders*', autofill=False, cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', autofill=False, cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: Str('name_from_ip?', autofill=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsforwardzone_remove_permission/1
args: 1,1,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: dnsforwardzone_show/1
args: 1,4,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsrecord_add/1
args: 2,99,3
arg: DNSNameParam('dnszoneidnsname', cli_name='dnszone')
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('a6_part_data?', cli_name='a6_data', option_group=u'A6 Record')
option: A6Record('a6record*', cli_name='a6_rec', option_group=u'A6 Record')
option: Flag('a_extra_create_reverse?', autofill=True, cli_name='a_create_reverse', default=False, option_group=u'A Record')
option: Str('a_part_ip_address?', cli_name='a_ip_address', option_group=u'A Record')
option: Flag('aaaa_extra_create_reverse?', autofill=True, cli_name='aaaa_create_reverse', default=False, option_group=u'AAAA Record')
option: Str('aaaa_part_ip_address?', cli_name='aaaa_ip_address', option_group=u'AAAA Record')
option: AAAARecord('aaaarecord*', cli_name='aaaa_rec', option_group=u'AAAA Record')
option: Str('addattr*', cli_name='addattr')
option: DNSNameParam('afsdb_part_hostname?', cli_name='afsdb_hostname', option_group=u'AFSDB Record')
option: Int('afsdb_part_subtype?', cli_name='afsdb_subtype', option_group=u'AFSDB Record')
option: AFSDBRecord('afsdbrecord*', cli_name='afsdb_rec', option_group=u'AFSDB Record')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: APLRecord('aplrecord*', cli_name='apl_rec', option_group=u'APL Record')
option: ARecord('arecord*', cli_name='a_rec', option_group=u'A Record')
option: Int('cert_part_algorithm?', cli_name='cert_algorithm', option_group=u'CERT Record')
option: Str('cert_part_certificate_or_crl?', cli_name='cert_certificate_or_crl', option_group=u'CERT Record')
option: Int('cert_part_key_tag?', cli_name='cert_key_tag', option_group=u'CERT Record')
option: Int('cert_part_type?', cli_name='cert_type', option_group=u'CERT Record')
option: CERTRecord('certrecord*', cli_name='cert_rec', option_group=u'CERT Record')
option: DNSNameParam('cname_part_hostname?', cli_name='cname_hostname', option_group=u'CNAME Record')
option: CNAMERecord('cnamerecord*', cli_name='cname_rec', option_group=u'CNAME Record')
option: DHCIDRecord('dhcidrecord*', cli_name='dhcid_rec', option_group=u'DHCID Record')
option: Int('dlv_part_algorithm?', cli_name='dlv_algorithm', option_group=u'DLV Record')
option: Str('dlv_part_digest?', cli_name='dlv_digest', option_group=u'DLV Record')
option: Int('dlv_part_digest_type?', cli_name='dlv_digest_type', option_group=u'DLV Record')
option: Int('dlv_part_key_tag?', cli_name='dlv_key_tag', option_group=u'DLV Record')
option: DLVRecord('dlvrecord*', cli_name='dlv_rec', option_group=u'DLV Record')
option: DNSNameParam('dname_part_target?', cli_name='dname_target', option_group=u'DNAME Record')
option: DNAMERecord('dnamerecord*', cli_name='dname_rec', option_group=u'DNAME Record')
option: StrEnum('dnsclass?', cli_name='class', values=[u'IN', u'CS', u'CH', u'HS'])
option: Int('dnsttl?', cli_name='ttl')
option: Int('ds_part_algorithm?', cli_name='ds_algorithm', option_group=u'DS Record')
option: Str('ds_part_digest?', cli_name='ds_digest', option_group=u'DS Record')
option: Int('ds_part_digest_type?', cli_name='ds_digest_type', option_group=u'DS Record')
option: Int('ds_part_key_tag?', cli_name='ds_key_tag', option_group=u'DS Record')
option: DSRecord('dsrecord*', cli_name='ds_rec', option_group=u'DS Record')
option: Flag('force', autofill=True, default=False)
option: HIPRecord('hiprecord*', cli_name='hip_rec', option_group=u'HIP Record')
option: IPSECKEYRecord('ipseckeyrecord*', cli_name='ipseckey_rec', option_group=u'IPSECKEY Record')
option: KEYRecord('keyrecord*', cli_name='key_rec', option_group=u'KEY Record')
option: DNSNameParam('kx_part_exchanger?', cli_name='kx_exchanger', option_group=u'KX Record')
option: Int('kx_part_preference?', cli_name='kx_preference', option_group=u'KX Record')
option: KXRecord('kxrecord*', cli_name='kx_rec', option_group=u'KX Record')
option: Decimal('loc_part_altitude?', cli_name='loc_altitude', option_group=u'LOC Record')
option: Decimal('loc_part_h_precision?', cli_name='loc_h_precision', option_group=u'LOC Record')
option: Int('loc_part_lat_deg?', cli_name='loc_lat_deg', option_group=u'LOC Record')
option: StrEnum('loc_part_lat_dir?', cli_name='loc_lat_dir', option_group=u'LOC Record', values=[u'N', u'S'])
option: Int('loc_part_lat_min?', cli_name='loc_lat_min', option_group=u'LOC Record')
option: Decimal('loc_part_lat_sec?', cli_name='loc_lat_sec', option_group=u'LOC Record')
option: Int('loc_part_lon_deg?', cli_name='loc_lon_deg', option_group=u'LOC Record')
option: StrEnum('loc_part_lon_dir?', cli_name='loc_lon_dir', option_group=u'LOC Record', values=[u'E', u'W'])
option: Int('loc_part_lon_min?', cli_name='loc_lon_min', option_group=u'LOC Record')
option: Decimal('loc_part_lon_sec?', cli_name='loc_lon_sec', option_group=u'LOC Record')
option: Decimal('loc_part_size?', cli_name='loc_size', option_group=u'LOC Record')
option: Decimal('loc_part_v_precision?', cli_name='loc_v_precision', option_group=u'LOC Record')
option: LOCRecord('locrecord*', cli_name='loc_rec', option_group=u'LOC Record')
option: DNSNameParam('mx_part_exchanger?', cli_name='mx_exchanger', option_group=u'MX Record')
option: Int('mx_part_preference?', cli_name='mx_preference', option_group=u'MX Record')
option: MXRecord('mxrecord*', cli_name='mx_rec', option_group=u'MX Record')
option: Str('naptr_part_flags?', cli_name='naptr_flags', option_group=u'NAPTR Record')
option: Int('naptr_part_order?', cli_name='naptr_order', option_group=u'NAPTR Record')
option: Int('naptr_part_preference?', cli_name='naptr_preference', option_group=u'NAPTR Record')
option: Str('naptr_part_regexp?', cli_name='naptr_regexp', option_group=u'NAPTR Record')
option: Str('naptr_part_replacement?', cli_name='naptr_replacement', option_group=u'NAPTR Record')
option: Str('naptr_part_service?', cli_name='naptr_service', option_group=u'NAPTR Record')
option: NAPTRRecord('naptrrecord*', cli_name='naptr_rec', option_group=u'NAPTR Record')
option: DNSNameParam('ns_part_hostname?', cli_name='ns_hostname', option_group=u'NS Record')
option: NSECRecord('nsecrecord*', cli_name='nsec_rec', option_group=u'NSEC Record')
option: NSRecord('nsrecord*', cli_name='ns_rec', option_group=u'NS Record')
option: DNSNameParam('ptr_part_hostname?', cli_name='ptr_hostname', option_group=u'PTR Record')
option: PTRRecord('ptrrecord*', cli_name='ptr_rec', option_group=u'PTR Record')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: RPRecord('rprecord*', cli_name='rp_rec', option_group=u'RP Record')
option: RRSIGRecord('rrsigrecord*', cli_name='rrsig_rec', option_group=u'RRSIG Record')
option: Str('setattr*', cli_name='setattr')
option: SIGRecord('sigrecord*', cli_name='sig_rec', option_group=u'SIG Record')
option: SPFRecord('spfrecord*', cli_name='spf_rec', option_group=u'SPF Record')
option: Int('srv_part_port?', cli_name='srv_port', option_group=u'SRV Record')
option: Int('srv_part_priority?', cli_name='srv_priority', option_group=u'SRV Record')
option: DNSNameParam('srv_part_target?', cli_name='srv_target', option_group=u'SRV Record')
option: Int('srv_part_weight?', cli_name='srv_weight', option_group=u'SRV Record')
option: SRVRecord('srvrecord*', cli_name='srv_rec', option_group=u'SRV Record')
option: Int('sshfp_part_algorithm?', cli_name='sshfp_algorithm', option_group=u'SSHFP Record')
option: Str('sshfp_part_fingerprint?', cli_name='sshfp_fingerprint', option_group=u'SSHFP Record')
option: Int('sshfp_part_fp_type?', cli_name='sshfp_fp_type', option_group=u'SSHFP Record')
option: SSHFPRecord('sshfprecord*', cli_name='sshfp_rec', option_group=u'SSHFP Record')
option: Flag('structured', autofill=True, default=False)
option: Str('tlsa_part_cert_association_data?', cli_name='tlsa_cert_association_data', option_group=u'TLSA Record')
option: Int('tlsa_part_cert_usage?', cli_name='tlsa_cert_usage', option_group=u'TLSA Record')
option: Int('tlsa_part_matching_type?', cli_name='tlsa_matching_type', option_group=u'TLSA Record')
option: Int('tlsa_part_selector?', cli_name='tlsa_selector', option_group=u'TLSA Record')
option: TLSARecord('tlsarecord*', cli_name='tlsa_rec', option_group=u'TLSA Record')
option: Str('txt_part_data?', cli_name='txt_data', option_group=u'TXT Record')
option: TXTRecord('txtrecord*', cli_name='txt_rec', option_group=u'TXT Record')
option: Int('uri_part_priority?', cli_name='uri_priority', option_group=u'URI Record')
option: Str('uri_part_target?', cli_name='uri_target', option_group=u'URI Record')
option: Int('uri_part_weight?', cli_name='uri_weight', option_group=u'URI Record')
option: URIRecord('urirecord*', cli_name='uri_rec', option_group=u'URI Record')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsrecord_del/1
args: 2,36,3
arg: DNSNameParam('dnszoneidnsname', cli_name='dnszone')
arg: DNSNameParam('idnsname', cli_name='name')
option: A6Record('a6record*', autofill=False, cli_name='a6_rec')
option: AAAARecord('aaaarecord*', autofill=False, cli_name='aaaa_rec')
option: AFSDBRecord('afsdbrecord*', autofill=False, cli_name='afsdb_rec')
option: APLRecord('aplrecord*', autofill=False, cli_name='apl_rec')
option: ARecord('arecord*', autofill=False, cli_name='a_rec')
option: CERTRecord('certrecord*', autofill=False, cli_name='cert_rec')
option: CNAMERecord('cnamerecord*', autofill=False, cli_name='cname_rec')
option: Flag('del_all', autofill=True, default=False)
option: DHCIDRecord('dhcidrecord*', autofill=False, cli_name='dhcid_rec')
option: DLVRecord('dlvrecord*', autofill=False, cli_name='dlv_rec')
option: DNAMERecord('dnamerecord*', autofill=False, cli_name='dname_rec')
option: StrEnum('dnsclass?', autofill=False, cli_name='class', values=[u'IN', u'CS', u'CH', u'HS'])
option: Int('dnsttl?', autofill=False, cli_name='ttl')
option: DSRecord('dsrecord*', autofill=False, cli_name='ds_rec')
option: HIPRecord('hiprecord*', autofill=False, cli_name='hip_rec')
option: IPSECKEYRecord('ipseckeyrecord*', autofill=False, cli_name='ipseckey_rec')
option: KEYRecord('keyrecord*', autofill=False, cli_name='key_rec')
option: KXRecord('kxrecord*', autofill=False, cli_name='kx_rec')
option: LOCRecord('locrecord*', autofill=False, cli_name='loc_rec')
option: MXRecord('mxrecord*', autofill=False, cli_name='mx_rec')
option: NAPTRRecord('naptrrecord*', autofill=False, cli_name='naptr_rec')
option: NSECRecord('nsecrecord*', autofill=False, cli_name='nsec_rec')
option: NSRecord('nsrecord*', autofill=False, cli_name='ns_rec')
option: PTRRecord('ptrrecord*', autofill=False, cli_name='ptr_rec')
option: Flag('raw', autofill=True, default=False)
option: RPRecord('rprecord*', autofill=False, cli_name='rp_rec')
option: RRSIGRecord('rrsigrecord*', autofill=False, cli_name='rrsig_rec')
option: SIGRecord('sigrecord*', autofill=False, cli_name='sig_rec')
option: SPFRecord('spfrecord*', autofill=False, cli_name='spf_rec')
option: SRVRecord('srvrecord*', autofill=False, cli_name='srv_rec')
option: SSHFPRecord('sshfprecord*', autofill=False, cli_name='sshfp_rec')
option: Flag('structured', autofill=True, default=False)
option: TLSARecord('tlsarecord*', autofill=False, cli_name='tlsa_rec')
option: TXTRecord('txtrecord*', autofill=False, cli_name='txt_rec')
option: URIRecord('urirecord*', autofill=False, cli_name='uri_rec')
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: dnsrecord_delentry/1
args: 2,2,3
arg: DNSNameParam('dnszoneidnsname', cli_name='dnszone')
arg: DNSNameParam('idnsname+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: dnsrecord_find/1
args: 2,40,4
arg: DNSNameParam('dnszoneidnsname', cli_name='dnszone')
arg: Str('criteria?')
option: A6Record('a6record*', autofill=False, cli_name='a6_rec')
option: AAAARecord('aaaarecord*', autofill=False, cli_name='aaaa_rec')
option: AFSDBRecord('afsdbrecord*', autofill=False, cli_name='afsdb_rec')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: APLRecord('aplrecord*', autofill=False, cli_name='apl_rec')
option: ARecord('arecord*', autofill=False, cli_name='a_rec')
option: CERTRecord('certrecord*', autofill=False, cli_name='cert_rec')
option: CNAMERecord('cnamerecord*', autofill=False, cli_name='cname_rec')
option: DHCIDRecord('dhcidrecord*', autofill=False, cli_name='dhcid_rec')
option: DLVRecord('dlvrecord*', autofill=False, cli_name='dlv_rec')
option: DNAMERecord('dnamerecord*', autofill=False, cli_name='dname_rec')
option: StrEnum('dnsclass?', autofill=False, cli_name='class', values=[u'IN', u'CS', u'CH', u'HS'])
option: Int('dnsttl?', autofill=False, cli_name='ttl')
option: DSRecord('dsrecord*', autofill=False, cli_name='ds_rec')
option: HIPRecord('hiprecord*', autofill=False, cli_name='hip_rec')
option: DNSNameParam('idnsname?', autofill=False, cli_name='name')
option: IPSECKEYRecord('ipseckeyrecord*', autofill=False, cli_name='ipseckey_rec')
option: KEYRecord('keyrecord*', autofill=False, cli_name='key_rec')
option: KXRecord('kxrecord*', autofill=False, cli_name='kx_rec')
option: LOCRecord('locrecord*', autofill=False, cli_name='loc_rec')
option: MXRecord('mxrecord*', autofill=False, cli_name='mx_rec')
option: NAPTRRecord('naptrrecord*', autofill=False, cli_name='naptr_rec')
option: NSECRecord('nsecrecord*', autofill=False, cli_name='nsec_rec')
option: NSRecord('nsrecord*', autofill=False, cli_name='ns_rec')
option: Flag('pkey_only?', autofill=True, default=False)
option: PTRRecord('ptrrecord*', autofill=False, cli_name='ptr_rec')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: RPRecord('rprecord*', autofill=False, cli_name='rp_rec')
option: RRSIGRecord('rrsigrecord*', autofill=False, cli_name='rrsig_rec')
option: SIGRecord('sigrecord*', autofill=False, cli_name='sig_rec')
option: Int('sizelimit?', autofill=False)
option: SPFRecord('spfrecord*', autofill=False, cli_name='spf_rec')
option: SRVRecord('srvrecord*', autofill=False, cli_name='srv_rec')
option: SSHFPRecord('sshfprecord*', autofill=False, cli_name='sshfp_rec')
option: Flag('structured', autofill=True, default=False)
option: Int('timelimit?', autofill=False)
option: TLSARecord('tlsarecord*', autofill=False, cli_name='tlsa_rec')
option: TXTRecord('txtrecord*', autofill=False, cli_name='txt_rec')
option: URIRecord('urirecord*', autofill=False, cli_name='uri_rec')
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: dnsrecord_mod/1
args: 2,99,3
arg: DNSNameParam('dnszoneidnsname', cli_name='dnszone')
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('a6_part_data?', autofill=False, cli_name='a6_data', option_group=u'A6 Record')
option: A6Record('a6record*', autofill=False, cli_name='a6_rec', option_group=u'A6 Record')
option: Str('a_part_ip_address?', autofill=False, cli_name='a_ip_address', option_group=u'A Record')
option: Str('aaaa_part_ip_address?', autofill=False, cli_name='aaaa_ip_address', option_group=u'AAAA Record')
option: AAAARecord('aaaarecord*', autofill=False, cli_name='aaaa_rec', option_group=u'AAAA Record')
option: Str('addattr*', cli_name='addattr')
option: DNSNameParam('afsdb_part_hostname?', autofill=False, cli_name='afsdb_hostname', option_group=u'AFSDB Record')
option: Int('afsdb_part_subtype?', autofill=False, cli_name='afsdb_subtype', option_group=u'AFSDB Record')
option: AFSDBRecord('afsdbrecord*', autofill=False, cli_name='afsdb_rec', option_group=u'AFSDB Record')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: APLRecord('aplrecord*', autofill=False, cli_name='apl_rec', option_group=u'APL Record')
option: ARecord('arecord*', autofill=False, cli_name='a_rec', option_group=u'A Record')
option: Int('cert_part_algorithm?', autofill=False, cli_name='cert_algorithm', option_group=u'CERT Record')
option: Str('cert_part_certificate_or_crl?', autofill=False, cli_name='cert_certificate_or_crl', option_group=u'CERT Record')
option: Int('cert_part_key_tag?', autofill=False, cli_name='cert_key_tag', option_group=u'CERT Record')
option: Int('cert_part_type?', autofill=False, cli_name='cert_type', option_group=u'CERT Record')
option: CERTRecord('certrecord*', autofill=False, cli_name='cert_rec', option_group=u'CERT Record')
option: DNSNameParam('cname_part_hostname?', autofill=False, cli_name='cname_hostname', option_group=u'CNAME Record')
option: CNAMERecord('cnamerecord*', autofill=False, cli_name='cname_rec', option_group=u'CNAME Record')
option: Str('delattr*', cli_name='delattr')
option: DHCIDRecord('dhcidrecord*', autofill=False, cli_name='dhcid_rec', option_group=u'DHCID Record')
option: Int('dlv_part_algorithm?', autofill=False, cli_name='dlv_algorithm', option_group=u'DLV Record')
option: Str('dlv_part_digest?', autofill=False, cli_name='dlv_digest', option_group=u'DLV Record')
option: Int('dlv_part_digest_type?', autofill=False, cli_name='dlv_digest_type', option_group=u'DLV Record')
option: Int('dlv_part_key_tag?', autofill=False, cli_name='dlv_key_tag', option_group=u'DLV Record')
option: DLVRecord('dlvrecord*', autofill=False, cli_name='dlv_rec', option_group=u'DLV Record')
option: DNSNameParam('dname_part_target?', autofill=False, cli_name='dname_target', option_group=u'DNAME Record')
option: DNAMERecord('dnamerecord*', autofill=False, cli_name='dname_rec', option_group=u'DNAME Record')
option: StrEnum('dnsclass?', autofill=False, cli_name='class', values=[u'IN', u'CS', u'CH', u'HS'])
option: Int('dnsttl?', autofill=False, cli_name='ttl')
option: Int('ds_part_algorithm?', autofill=False, cli_name='ds_algorithm', option_group=u'DS Record')
option: Str('ds_part_digest?', autofill=False, cli_name='ds_digest', option_group=u'DS Record')
option: Int('ds_part_digest_type?', autofill=False, cli_name='ds_digest_type', option_group=u'DS Record')
option: Int('ds_part_key_tag?', autofill=False, cli_name='ds_key_tag', option_group=u'DS Record')
option: DSRecord('dsrecord*', autofill=False, cli_name='ds_rec', option_group=u'DS Record')
option: HIPRecord('hiprecord*', autofill=False, cli_name='hip_rec', option_group=u'HIP Record')
option: IPSECKEYRecord('ipseckeyrecord*', autofill=False, cli_name='ipseckey_rec', option_group=u'IPSECKEY Record')
option: KEYRecord('keyrecord*', autofill=False, cli_name='key_rec', option_group=u'KEY Record')
option: DNSNameParam('kx_part_exchanger?', autofill=False, cli_name='kx_exchanger', option_group=u'KX Record')
option: Int('kx_part_preference?', autofill=False, cli_name='kx_preference', option_group=u'KX Record')
option: KXRecord('kxrecord*', autofill=False, cli_name='kx_rec', option_group=u'KX Record')
option: Decimal('loc_part_altitude?', autofill=False, cli_name='loc_altitude', option_group=u'LOC Record')
option: Decimal('loc_part_h_precision?', autofill=False, cli_name='loc_h_precision', option_group=u'LOC Record')
option: Int('loc_part_lat_deg?', autofill=False, cli_name='loc_lat_deg', option_group=u'LOC Record')
option: StrEnum('loc_part_lat_dir?', autofill=False, cli_name='loc_lat_dir', option_group=u'LOC Record', values=[u'N', u'S'])
option: Int('loc_part_lat_min?', autofill=False, cli_name='loc_lat_min', option_group=u'LOC Record')
option: Decimal('loc_part_lat_sec?', autofill=False, cli_name='loc_lat_sec', option_group=u'LOC Record')
option: Int('loc_part_lon_deg?', autofill=False, cli_name='loc_lon_deg', option_group=u'LOC Record')
option: StrEnum('loc_part_lon_dir?', autofill=False, cli_name='loc_lon_dir', option_group=u'LOC Record', values=[u'E', u'W'])
option: Int('loc_part_lon_min?', autofill=False, cli_name='loc_lon_min', option_group=u'LOC Record')
option: Decimal('loc_part_lon_sec?', autofill=False, cli_name='loc_lon_sec', option_group=u'LOC Record')
option: Decimal('loc_part_size?', autofill=False, cli_name='loc_size', option_group=u'LOC Record')
option: Decimal('loc_part_v_precision?', autofill=False, cli_name='loc_v_precision', option_group=u'LOC Record')
option: LOCRecord('locrecord*', autofill=False, cli_name='loc_rec', option_group=u'LOC Record')
option: DNSNameParam('mx_part_exchanger?', autofill=False, cli_name='mx_exchanger', option_group=u'MX Record')
option: Int('mx_part_preference?', autofill=False, cli_name='mx_preference', option_group=u'MX Record')
option: MXRecord('mxrecord*', autofill=False, cli_name='mx_rec', option_group=u'MX Record')
option: Str('naptr_part_flags?', autofill=False, cli_name='naptr_flags', option_group=u'NAPTR Record')
option: Int('naptr_part_order?', autofill=False, cli_name='naptr_order', option_group=u'NAPTR Record')
option: Int('naptr_part_preference?', autofill=False, cli_name='naptr_preference', option_group=u'NAPTR Record')
option: Str('naptr_part_regexp?', autofill=False, cli_name='naptr_regexp', option_group=u'NAPTR Record')
option: Str('naptr_part_replacement?', autofill=False, cli_name='naptr_replacement', option_group=u'NAPTR Record')
option: Str('naptr_part_service?', autofill=False, cli_name='naptr_service', option_group=u'NAPTR Record')
option: NAPTRRecord('naptrrecord*', autofill=False, cli_name='naptr_rec', option_group=u'NAPTR Record')
option: DNSNameParam('ns_part_hostname?', autofill=False, cli_name='ns_hostname', option_group=u'NS Record')
option: NSECRecord('nsecrecord*', autofill=False, cli_name='nsec_rec', option_group=u'NSEC Record')
option: NSRecord('nsrecord*', autofill=False, cli_name='ns_rec', option_group=u'NS Record')
option: DNSNameParam('ptr_part_hostname?', autofill=False, cli_name='ptr_hostname', option_group=u'PTR Record')
option: PTRRecord('ptrrecord*', autofill=False, cli_name='ptr_rec', option_group=u'PTR Record')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: DNSNameParam('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: RPRecord('rprecord*', autofill=False, cli_name='rp_rec', option_group=u'RP Record')
option: RRSIGRecord('rrsigrecord*', autofill=False, cli_name='rrsig_rec', option_group=u'RRSIG Record')
option: Str('setattr*', cli_name='setattr')
option: SIGRecord('sigrecord*', autofill=False, cli_name='sig_rec', option_group=u'SIG Record')
option: SPFRecord('spfrecord*', autofill=False, cli_name='spf_rec', option_group=u'SPF Record')
option: Int('srv_part_port?', autofill=False, cli_name='srv_port', option_group=u'SRV Record')
option: Int('srv_part_priority?', autofill=False, cli_name='srv_priority', option_group=u'SRV Record')
option: DNSNameParam('srv_part_target?', autofill=False, cli_name='srv_target', option_group=u'SRV Record')
option: Int('srv_part_weight?', autofill=False, cli_name='srv_weight', option_group=u'SRV Record')
option: SRVRecord('srvrecord*', autofill=False, cli_name='srv_rec', option_group=u'SRV Record')
option: Int('sshfp_part_algorithm?', autofill=False, cli_name='sshfp_algorithm', option_group=u'SSHFP Record')
option: Str('sshfp_part_fingerprint?', autofill=False, cli_name='sshfp_fingerprint', option_group=u'SSHFP Record')
option: Int('sshfp_part_fp_type?', autofill=False, cli_name='sshfp_fp_type', option_group=u'SSHFP Record')
option: SSHFPRecord('sshfprecord*', autofill=False, cli_name='sshfp_rec', option_group=u'SSHFP Record')
option: Flag('structured', autofill=True, default=False)
option: Str('tlsa_part_cert_association_data?', autofill=False, cli_name='tlsa_cert_association_data', option_group=u'TLSA Record')
option: Int('tlsa_part_cert_usage?', autofill=False, cli_name='tlsa_cert_usage', option_group=u'TLSA Record')
option: Int('tlsa_part_matching_type?', autofill=False, cli_name='tlsa_matching_type', option_group=u'TLSA Record')
option: Int('tlsa_part_selector?', autofill=False, cli_name='tlsa_selector', option_group=u'TLSA Record')
option: TLSARecord('tlsarecord*', autofill=False, cli_name='tlsa_rec', option_group=u'TLSA Record')
option: Str('txt_part_data?', autofill=False, cli_name='txt_data', option_group=u'TXT Record')
option: TXTRecord('txtrecord*', autofill=False, cli_name='txt_rec', option_group=u'TXT Record')
option: Int('uri_part_priority?', autofill=False, cli_name='uri_priority', option_group=u'URI Record')
option: Str('uri_part_target?', autofill=False, cli_name='uri_target', option_group=u'URI Record')
option: Int('uri_part_weight?', autofill=False, cli_name='uri_weight', option_group=u'URI Record')
option: URIRecord('urirecord*', autofill=False, cli_name='uri_rec', option_group=u'URI Record')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsrecord_show/1
args: 2,5,3
arg: DNSNameParam('dnszoneidnsname', cli_name='dnszone')
arg: DNSNameParam('idnsname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Flag('structured', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsrecord_split_parts/1
args: 2,1,1
arg: Str('name')
arg: Str('value')
option: Str('version?')
output: Output('result')
command: dnsserver_add/1
args: 1,8,3
arg: Str('idnsserverid', cli_name='hostname')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('idnsforwarders*', cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: DNSNameParam('idnssoamname?', cli_name='soa_mname_override')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsserver_del/1
args: 1,2,3
arg: Str('idnsserverid+', cli_name='hostname')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: dnsserver_find/1
args: 1,10,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('idnsforwarders*', autofill=False, cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', autofill=False, cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: Str('idnsserverid?', autofill=False, cli_name='hostname')
option: DNSNameParam('idnssoamname?', autofill=False, cli_name='soa_mname_override')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: dnsserver_mod/1
args: 1,10,3
arg: Str('idnsserverid', cli_name='hostname')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('idnsforwarders*', autofill=False, cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', autofill=False, cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: DNSNameParam('idnssoamname?', autofill=False, cli_name='soa_mname_override')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnsserver_show/1
args: 1,4,3
arg: Str('idnsserverid', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnszone_add/1
args: 1,29,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: StrEnum('dnsclass?', cli_name='class', values=[u'IN', u'CS', u'CH', u'HS'])
option: Int('dnsdefaultttl?', cli_name='default_ttl')
option: Int('dnsttl?', cli_name='ttl')
option: Flag('force', autofill=True, default=False)
option: Bool('idnsallowdynupdate?', autofill=True, cli_name='dynamic_update', default=False)
option: Str('idnsallowquery?', autofill=True, cli_name='allow_query', default=u'any;')
option: Bool('idnsallowsyncptr?', cli_name='allow_sync_ptr')
option: Str('idnsallowtransfer?', autofill=True, cli_name='allow_transfer', default=u'none;')
option: Str('idnsforwarders*', cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: Bool('idnssecinlinesigning?', cli_name='dnssec', default=False)
option: Int('idnssoaexpire', autofill=True, cli_name='expire', default=1209600)
option: Int('idnssoaminimum', autofill=True, cli_name='minimum', default=3600)
option: DNSNameParam('idnssoamname?', cli_name='name_server')
option: Int('idnssoarefresh', autofill=True, cli_name='refresh', default=3600)
option: Int('idnssoaretry', autofill=True, cli_name='retry', default=900)
option: DNSNameParam('idnssoarname', autofill=True, cli_name='admin_email', default=<DNS name hostmaster>)
option: Int('idnssoaserial?', cli_name='serial', deprecated=True)
option: Str('idnsupdatepolicy?', autofill=True, cli_name='update_policy')
option: Str('ip_address?')
option: Str('name_from_ip?')
option: Str('nsec3paramrecord?', cli_name='nsec3param_rec')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Flag('skip_nameserver_check', autofill=True, default=False)
option: Flag('skip_overlap_check', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnszone_add_permission/1
args: 1,1,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: dnszone_del/1
args: 1,2,3
arg: DNSNameParam('idnsname+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: dnszone_disable/1
args: 1,1,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnszone_enable/1
args: 1,1,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnszone_find/1
args: 1,29,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: StrEnum('dnsclass?', autofill=False, cli_name='class', values=[u'IN', u'CS', u'CH', u'HS'])
option: Int('dnsdefaultttl?', autofill=False, cli_name='default_ttl')
option: Int('dnsttl?', autofill=False, cli_name='ttl')
option: Flag('forward_only', autofill=True, cli_name='forward_only', default=False)
option: Bool('idnsallowdynupdate?', autofill=False, cli_name='dynamic_update', default=False)
option: Str('idnsallowquery?', autofill=False, cli_name='allow_query', default=u'any;')
option: Bool('idnsallowsyncptr?', autofill=False, cli_name='allow_sync_ptr')
option: Str('idnsallowtransfer?', autofill=False, cli_name='allow_transfer', default=u'none;')
option: Str('idnsforwarders*', autofill=False, cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', autofill=False, cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: DNSNameParam('idnsname?', autofill=False, cli_name='name')
option: Bool('idnssecinlinesigning?', autofill=False, cli_name='dnssec', default=False)
option: Int('idnssoaexpire?', autofill=False, cli_name='expire', default=1209600)
option: Int('idnssoaminimum?', autofill=False, cli_name='minimum', default=3600)
option: DNSNameParam('idnssoamname?', autofill=False, cli_name='name_server')
option: Int('idnssoarefresh?', autofill=False, cli_name='refresh', default=3600)
option: Int('idnssoaretry?', autofill=False, cli_name='retry', default=900)
option: DNSNameParam('idnssoarname?', autofill=False, cli_name='admin_email', default=<DNS name hostmaster>)
option: Int('idnssoaserial?', autofill=False, cli_name='serial', deprecated=True)
option: Str('idnsupdatepolicy?', autofill=False, cli_name='update_policy')
option: Bool('idnszoneactive?', autofill=False, cli_name='zone_active')
option: Str('name_from_ip?', autofill=False)
option: Str('nsec3paramrecord?', autofill=False, cli_name='nsec3param_rec')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: dnszone_mod/1
args: 1,28,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: StrEnum('dnsclass?', autofill=False, cli_name='class', values=[u'IN', u'CS', u'CH', u'HS'])
option: Int('dnsdefaultttl?', autofill=False, cli_name='default_ttl')
option: Int('dnsttl?', autofill=False, cli_name='ttl')
option: Flag('force', autofill=True, default=False)
option: Bool('idnsallowdynupdate?', autofill=False, cli_name='dynamic_update', default=False)
option: Str('idnsallowquery?', autofill=False, cli_name='allow_query', default=u'any;')
option: Bool('idnsallowsyncptr?', autofill=False, cli_name='allow_sync_ptr')
option: Str('idnsallowtransfer?', autofill=False, cli_name='allow_transfer', default=u'none;')
option: Str('idnsforwarders*', autofill=False, cli_name='forwarder')
option: StrEnum('idnsforwardpolicy?', autofill=False, cli_name='forward_policy', values=[u'only', u'first', u'none'])
option: Bool('idnssecinlinesigning?', autofill=False, cli_name='dnssec', default=False)
option: Int('idnssoaexpire?', autofill=False, cli_name='expire', default=1209600)
option: Int('idnssoaminimum?', autofill=False, cli_name='minimum', default=3600)
option: DNSNameParam('idnssoamname?', autofill=False, cli_name='name_server')
option: Int('idnssoarefresh?', autofill=False, cli_name='refresh', default=3600)
option: Int('idnssoaretry?', autofill=False, cli_name='retry', default=900)
option: DNSNameParam('idnssoarname?', autofill=False, cli_name='admin_email', default=<DNS name hostmaster>)
option: Int('idnssoaserial?', autofill=False, cli_name='serial', deprecated=True)
option: Str('idnsupdatepolicy?', autofill=False, cli_name='update_policy')
option: Str('name_from_ip?', autofill=False)
option: Str('nsec3paramrecord?', autofill=False, cli_name='nsec3param_rec')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: dnszone_remove_permission/1
args: 1,1,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: dnszone_show/1
args: 1,4,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: domainlevel_get/1
args: 0,1,1
option: Str('version?')
output: Output('result', type=[<type 'int'>])
command: domainlevel_set/1
args: 1,1,1
arg: Int('ipadomainlevel', cli_name='level')
option: Str('version?')
output: Output('result', type=[<type 'int'>])
command: env/1
args: 1,3,4
arg: Str('variables*')
option: Flag('all', autofill=True, cli_name='all', default=True)
option: Flag('server?', autofill=True, default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('total', type=[<type 'int'>])
command: group_add/1
args: 1,10,3
arg: Str('cn', cli_name='group_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('external', autofill=True, cli_name='external', default=False)
option: Int('gidnumber?', cli_name='gid')
option: Flag('no_members', autofill=True, default=False)
option: Flag('nonposix', autofill=True, cli_name='nonposix', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: group_add_member/1
args: 1,9,3
arg: Str('cn', cli_name='group_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('idoverrideuser*', alwaysask=True, cli_name='idoverrideusers')
option: Str('ipaexternalmember*', cli_name='external')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('service*', alwaysask=True, cli_name='services')
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: group_add_member_manager/1
args: 1,6,3
arg: Str('cn', cli_name='group_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: group_del/1
args: 1,2,3
arg: Str('cn+', cli_name='group_name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: group_detach/1
args: 1,1,3
arg: Str('cn', cli_name='group_name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: group_find/1
args: 1,36,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='group_name')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('external', autofill=True, cli_name='external', default=False)
option: Int('gidnumber?', autofill=False, cli_name='gid')
option: Str('group*', cli_name='groups')
option: Str('idoverrideuser*', cli_name='idoverrideusers')
option: Str('in_group*', cli_name='in_groups')
option: Str('in_hbacrule*', cli_name='in_hbacrules')
option: Str('in_netgroup*', cli_name='in_netgroups')
option: Str('in_role*', cli_name='in_roles')
option: Str('in_sudorule*', cli_name='in_sudorules')
option: Str('membermanager_group*', cli_name='membermanager_groups')
option: Str('membermanager_user*', cli_name='membermanager_users')
option: Str('no_group*', cli_name='no_groups')
option: Str('no_idoverrideuser*', cli_name='no_idoverrideusers')
option: Flag('no_members', autofill=True, default=True)
option: Principal('no_service*', cli_name='no_services')
option: Str('no_user*', cli_name='no_users')
option: Flag('nonposix', autofill=True, cli_name='nonposix', default=False)
option: Str('not_in_group*', cli_name='not_in_groups')
option: Str('not_in_hbacrule*', cli_name='not_in_hbacrules')
option: Str('not_in_netgroup*', cli_name='not_in_netgroups')
option: Str('not_in_role*', cli_name='not_in_roles')
option: Str('not_in_sudorule*', cli_name='not_in_sudorules')
option: Str('not_membermanager_group*', cli_name='not_membermanager_groups')
option: Str('not_membermanager_user*', cli_name='not_membermanager_users')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('posix', autofill=True, cli_name='posix', default=False)
option: Flag('private', autofill=True, cli_name='private', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service*', cli_name='services')
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('user*', cli_name='users')
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: group_mod/1
args: 1,13,3
arg: Str('cn', cli_name='group_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('external', autofill=True, cli_name='external', default=False)
option: Int('gidnumber?', autofill=False, cli_name='gid')
option: Flag('no_members', autofill=True, default=False)
option: Flag('posix', autofill=True, cli_name='posix', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: group_remove_member/1
args: 1,9,3
arg: Str('cn', cli_name='group_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('idoverrideuser*', alwaysask=True, cli_name='idoverrideusers')
option: Str('ipaexternalmember*', cli_name='external')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('service*', alwaysask=True, cli_name='services')
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: group_remove_member_manager/1
args: 1,6,3
arg: Str('cn', cli_name='group_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: group_show/1
args: 1,5,3
arg: Str('cn', cli_name='group_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacrule_add/1
args: 1,14,3
arg: Str('cn', cli_name='name')
option: StrEnum('accessruletype', autofill=True, cli_name='type', default=u'allow', values=[u'allow', u'deny'])
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Str('externalhost*')
option: StrEnum('hostcategory?', cli_name='hostcat', values=[u'all'])
option: Bool('ipaenabledflag?')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('servicecategory?', cli_name='servicecat', values=[u'all'])
option: Str('setattr*', cli_name='setattr')
option: StrEnum('sourcehostcategory?', cli_name='srchostcat', deprecated=True, values=[u'all'])
option: StrEnum('usercategory?', cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacrule_add_host/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacrule_add_service/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('hbacsvc*', alwaysask=True, cli_name='hbacsvcs')
option: Str('hbacsvcgroup*', alwaysask=True, cli_name='hbacsvcgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacrule_add_sourcehost/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacrule_add_user/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacrule_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: hbacrule_disable/1
args: 1,1,3
arg: Str('cn', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacrule_enable/1
args: 1,1,3
arg: Str('cn', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacrule_find/1
args: 1,16,4
arg: Str('criteria?')
option: StrEnum('accessruletype?', autofill=False, cli_name='type', default=u'allow', values=[u'allow', u'deny'])
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('externalhost*', autofill=False)
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: Bool('ipaenabledflag?', autofill=False)
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: StrEnum('servicecategory?', autofill=False, cli_name='servicecat', values=[u'all'])
option: Int('sizelimit?', autofill=False)
option: StrEnum('sourcehostcategory?', autofill=False, cli_name='srchostcat', deprecated=True, values=[u'all'])
option: Int('timelimit?', autofill=False)
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: hbacrule_mod/1
args: 1,17,3
arg: Str('cn', cli_name='name')
option: StrEnum('accessruletype?', autofill=False, cli_name='type', default=u'allow', values=[u'allow', u'deny'])
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('externalhost*', autofill=False)
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: Bool('ipaenabledflag?', autofill=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: StrEnum('servicecategory?', autofill=False, cli_name='servicecat', values=[u'all'])
option: Str('setattr*', cli_name='setattr')
option: StrEnum('sourcehostcategory?', autofill=False, cli_name='srchostcat', deprecated=True, values=[u'all'])
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacrule_remove_host/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacrule_remove_service/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('hbacsvc*', alwaysask=True, cli_name='hbacsvcs')
option: Str('hbacsvcgroup*', alwaysask=True, cli_name='hbacsvcgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacrule_remove_sourcehost/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacrule_remove_user/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacrule_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacsvc_add/1
args: 1,7,3
arg: Str('cn', cli_name='service')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacsvc_del/1
args: 1,2,3
arg: Str('cn+', cli_name='service')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: hbacsvc_find/1
args: 1,9,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='service')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: hbacsvc_mod/1
args: 1,9,3
arg: Str('cn', cli_name='service')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacsvc_show/1
args: 1,5,3
arg: Str('cn', cli_name='service')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacsvcgroup_add/1
args: 1,7,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacsvcgroup_add_member/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('hbacsvc*', alwaysask=True, cli_name='hbacsvcs')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacsvcgroup_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: hbacsvcgroup_find/1
args: 1,9,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: hbacsvcgroup_mod/1
args: 1,9,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbacsvcgroup_remove_member/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('hbacsvc*', alwaysask=True, cli_name='hbacsvcs')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hbacsvcgroup_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hbactest/1
args: 0,10,6
option: Flag('disabled?', autofill=True, cli_name='disabled', default=False)
option: Flag('enabled?', autofill=True, cli_name='enabled', default=False)
option: Flag('nodetail?', autofill=True, cli_name='nodetail', default=False)
option: Str('rules*', cli_name='rules')
option: Str('service', cli_name='service')
option: Int('sizelimit?', autofill=False)
option: Str('sourcehost?', cli_name='srchost', deprecated=True)
option: Str('targethost', cli_name='host')
option: Str('user', cli_name='user')
option: Str('version?')
output: Output('error', type=[<type 'list'>, <type 'tuple'>, <type 'NoneType'>])
output: Output('matched', type=[<type 'list'>, <type 'tuple'>, <type 'NoneType'>])
output: Output('notmatched', type=[<type 'list'>, <type 'tuple'>, <type 'NoneType'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'bool'>])
output: Output('warning', type=[<type 'list'>, <type 'tuple'>, <type 'NoneType'>])
command: host_add/1
args: 1,25,3
arg: Str('fqdn', cli_name='hostname')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('force', autofill=True, default=False)
option: Str('ip_address?')
option: Str('ipaassignedidview?')
option: Bool('ipakrbokasdelegate?', cli_name='ok_as_delegate')
option: Bool('ipakrboktoauthasdelegate?', cli_name='ok_to_auth_as_delegate')
option: Bool('ipakrbrequirespreauth?', cli_name='requires_pre_auth')
option: Str('ipasshpubkey*', cli_name='sshpubkey')
option: StrEnum('krbprincipalauthind*', cli_name='auth_ind', values=[u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: Str('l?', cli_name='locality')
option: Str('macaddress*')
option: Flag('no_members', autofill=True, default=False)
option: Flag('no_reverse', autofill=True, default=False)
option: Str('nshardwareplatform?', cli_name='platform')
option: Str('nshostlocation?', cli_name='location')
option: Str('nsosversion?', cli_name='os')
option: Flag('random?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Certificate('usercertificate*', cli_name='certificate')
option: Str('userclass*', cli_name='class')
option: HostPassword('userpassword?', cli_name='password')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: host_add_cert/1
args: 1,5,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: host_add_delegation/1
args: 2,4,3
arg: Str('fqdn', cli_name='hostname')
arg: Str('memberprincipal+', alwaysask=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: host_add_managedby/1
args: 1,5,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: host_add_principal/1
args: 2,4,3
arg: Str('fqdn', cli_name='hostname')
arg: Principal('krbprincipalname+', alwaysask=True)
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: host_allow_add_delegation/1
args: 1,8,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: host_allow_create_keytab/1
args: 1,8,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: host_allow_retrieve_keytab/1
args: 1,8,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: host_del/1
args: 1,3,3
arg: Str('fqdn+', cli_name='hostname')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Flag('updatedns?', autofill=True, default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: host_disable/1
args: 1,1,3
arg: Str('fqdn', cli_name='hostname')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: host_disallow_add_delegation/1
args: 1,8,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: host_disallow_create_keytab/1
args: 1,8,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: host_disallow_retrieve_keytab/1
args: 1,8,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: host_find/1
args: 1,34,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', autofill=False, cli_name='desc')
option: Str('enroll_by_user*', cli_name='enroll_by_users')
option: Str('fqdn?', autofill=False, cli_name='hostname')
option: Str('in_hbacrule*', cli_name='in_hbacrules')
option: Str('in_hostgroup*', cli_name='in_hostgroups')
option: Str('in_netgroup*', cli_name='in_netgroups')
option: Str('in_role*', cli_name='in_roles')
option: Str('in_sudorule*', cli_name='in_sudorules')
option: Str('ipaassignedidview?', autofill=False)
option: StrEnum('krbprincipalauthind*', autofill=False, cli_name='auth_ind', values=[u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: Str('l?', autofill=False, cli_name='locality')
option: Str('macaddress*', autofill=False)
option: Str('man_by_host*', cli_name='man_by_hosts')
option: Str('man_host*', cli_name='man_hosts')
option: Flag('no_members', autofill=True, default=True)
option: Str('not_enroll_by_user*', cli_name='not_enroll_by_users')
option: Str('not_in_hbacrule*', cli_name='not_in_hbacrules')
option: Str('not_in_hostgroup*', cli_name='not_in_hostgroups')
option: Str('not_in_netgroup*', cli_name='not_in_netgroups')
option: Str('not_in_role*', cli_name='not_in_roles')
option: Str('not_in_sudorule*', cli_name='not_in_sudorules')
option: Str('not_man_by_host*', cli_name='not_man_by_hosts')
option: Str('not_man_host*', cli_name='not_man_hosts')
option: Str('nshardwareplatform?', autofill=False, cli_name='platform')
option: Str('nshostlocation?', autofill=False, cli_name='location')
option: Str('nsosversion?', autofill=False, cli_name='os')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Certificate('usercertificate*', autofill=False, cli_name='certificate')
option: Str('userclass*', autofill=False, cli_name='class')
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: host_mod/1
args: 1,26,3
arg: Str('fqdn', cli_name='hostname')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('ipaassignedidview?', autofill=False)
option: Bool('ipakrbokasdelegate?', autofill=False, cli_name='ok_as_delegate')
option: Bool('ipakrboktoauthasdelegate?', autofill=False, cli_name='ok_to_auth_as_delegate')
option: Bool('ipakrbrequirespreauth?', autofill=False, cli_name='requires_pre_auth')
option: Str('ipasshpubkey*', autofill=False, cli_name='sshpubkey')
option: StrEnum('krbprincipalauthind*', autofill=False, cli_name='auth_ind', values=[u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: Principal('krbprincipalname*', autofill=False)
option: Str('l?', autofill=False, cli_name='locality')
option: Str('macaddress*', autofill=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('nshardwareplatform?', autofill=False, cli_name='platform')
option: Str('nshostlocation?', autofill=False, cli_name='location')
option: Str('nsosversion?', autofill=False, cli_name='os')
option: Flag('random?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Flag('updatedns?', autofill=True, default=False)
option: Certificate('usercertificate*', autofill=False, cli_name='certificate')
option: Str('userclass*', autofill=False, cli_name='class')
option: HostPassword('userpassword?', autofill=False, cli_name='password')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: host_remove_cert/1
args: 1,5,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: host_remove_delegation/1
args: 2,4,3
arg: Str('fqdn', cli_name='hostname')
arg: Str('memberprincipal+', alwaysask=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: host_remove_managedby/1
args: 1,5,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: host_remove_principal/1
args: 2,4,3
arg: Str('fqdn', cli_name='hostname')
arg: Principal('krbprincipalname+', alwaysask=True)
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: host_show/1
args: 1,6,3
arg: Str('fqdn', cli_name='hostname')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('out?')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hostgroup_add/1
args: 1,7,3
arg: Str('cn', cli_name='hostgroup_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hostgroup_add_member/1
args: 1,6,3
arg: Str('cn', cli_name='hostgroup_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hostgroup_add_member_manager/1
args: 1,6,3
arg: Str('cn', cli_name='hostgroup_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hostgroup_del/1
args: 1,2,3
arg: Str('cn+', cli_name='hostgroup_name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: hostgroup_find/1
args: 1,25,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='hostgroup_name')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('host*', cli_name='hosts')
option: Str('hostgroup*', cli_name='hostgroups')
option: Str('in_hbacrule*', cli_name='in_hbacrules')
option: Str('in_hostgroup*', cli_name='in_hostgroups')
option: Str('in_netgroup*', cli_name='in_netgroups')
option: Str('in_sudorule*', cli_name='in_sudorules')
option: Str('membermanager_group*', cli_name='membermanager_groups')
option: Str('membermanager_user*', cli_name='membermanager_users')
option: Str('no_host*', cli_name='no_hosts')
option: Str('no_hostgroup*', cli_name='no_hostgroups')
option: Flag('no_members', autofill=True, default=True)
option: Str('not_in_hbacrule*', cli_name='not_in_hbacrules')
option: Str('not_in_hostgroup*', cli_name='not_in_hostgroups')
option: Str('not_in_netgroup*', cli_name='not_in_netgroups')
option: Str('not_in_sudorule*', cli_name='not_in_sudorules')
option: Str('not_membermanager_group*', cli_name='not_membermanager_groups')
option: Str('not_membermanager_user*', cli_name='not_membermanager_users')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: hostgroup_mod/1
args: 1,10,3
arg: Str('cn', cli_name='hostgroup_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: hostgroup_remove_member/1
args: 1,6,3
arg: Str('cn', cli_name='hostgroup_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hostgroup_remove_member_manager/1
args: 1,6,3
arg: Str('cn', cli_name='hostgroup_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: hostgroup_show/1
args: 1,5,3
arg: Str('cn', cli_name='hostgroup_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: i18n_messages/1
args: 0,1,1
option: Str('version?')
output: Output('texts', type=[<type 'dict'>])
command: idoverridegroup_add/1
args: 2,9,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid', cli_name='anchor')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', cli_name='group_name')
option: Str('description?', cli_name='desc')
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Int('gidnumber?', cli_name='gid')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idoverridegroup_del/1
args: 2,3,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid+', cli_name='anchor')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: idoverridegroup_find/1
args: 2,11,4
arg: Str('idviewcn', cli_name='idview')
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='group_name')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Int('gidnumber?', autofill=False, cli_name='gid')
option: Str('ipaanchoruuid?', autofill=False, cli_name='anchor')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: idoverridegroup_mod/1
args: 2,12,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid', cli_name='anchor')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='group_name')
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Int('gidnumber?', autofill=False, cli_name='gid')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idoverridegroup_show/1
args: 2,5,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid', cli_name='anchor')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idoverrideuser_add/1
args: 2,17,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid', cli_name='anchor')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Str('gecos?')
option: Int('gidnumber?')
option: Str('homedirectory?', cli_name='homedir')
option: Str('ipaoriginaluid?')
option: Str('ipasshpubkey*', cli_name='sshpubkey')
option: Str('loginshell?', cli_name='shell')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('uid?', cli_name='login')
option: Int('uidnumber?', cli_name='uid')
option: Certificate('usercertificate*', cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idoverrideuser_add_cert/1
args: 2,6,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid', cli_name='anchor')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idoverrideuser_del/1
args: 2,3,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid+', cli_name='anchor')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: idoverrideuser_find/1
args: 2,17,4
arg: Str('idviewcn', cli_name='idview')
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Str('gecos?', autofill=False)
option: Int('gidnumber?', autofill=False)
option: Str('homedirectory?', autofill=False, cli_name='homedir')
option: Str('ipaanchoruuid?', autofill=False, cli_name='anchor')
option: Str('ipaoriginaluid?', autofill=False)
option: Str('loginshell?', autofill=False, cli_name='shell')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('uid?', autofill=False, cli_name='login')
option: Int('uidnumber?', autofill=False, cli_name='uid')
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: idoverrideuser_mod/1
args: 2,20,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid', cli_name='anchor')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Str('gecos?', autofill=False)
option: Int('gidnumber?', autofill=False)
option: Str('homedirectory?', autofill=False, cli_name='homedir')
option: Str('ipaoriginaluid?', autofill=False)
option: Str('ipasshpubkey*', autofill=False, cli_name='sshpubkey')
option: Str('loginshell?', autofill=False, cli_name='shell')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('uid?', autofill=False, cli_name='login')
option: Int('uidnumber?', autofill=False, cli_name='uid')
option: Certificate('usercertificate*', autofill=False, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idoverrideuser_remove_cert/1
args: 2,6,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid', cli_name='anchor')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idoverrideuser_show/1
args: 2,6,3
arg: Str('idviewcn', cli_name='idview')
arg: Str('ipaanchoruuid', cli_name='anchor')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('fallback_to_ldap?', autofill=True, default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idp_add/1
args: 1,18,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('ipaidpauthendpoint?', alwaysask=False, cli_name='auth_uri')
option: Str('ipaidpbaseurl?', cli_name='base_url')
option: Str('ipaidpclientid', cli_name='client_id')
option: Password('ipaidpclientsecret?', cli_name='secret', confirm=True)
option: Str('ipaidpdevauthendpoint?', alwaysask=False, cli_name='dev_auth_uri')
option: Str('ipaidpissuerurl?', cli_name='issuer_url')
option: Str('ipaidpkeysendpoint?', alwaysask=False, cli_name='keys_uri')
option: Str('ipaidporg?', cli_name='organization')
option: StrEnum('ipaidpprovider?', cli_name='provider', values=[u'google', u'github', u'microsoft', u'okta', u'keycloak'])
option: Str('ipaidpscope?', cli_name='scope')
option: Str('ipaidpsub?', cli_name='idp_user_id')
option: Str('ipaidptokenendpoint?', alwaysask=False, cli_name='token_uri')
option: Str('ipaidpuserinfoendpoint?', alwaysask=False, cli_name='userinfo_uri')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idp_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: idp_find/1
args: 1,17,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('ipaidpauthendpoint?', autofill=False, cli_name='auth_uri')
option: Str('ipaidpclientid?', autofill=False, cli_name='client_id')
option: Password('ipaidpclientsecret?', autofill=False, cli_name='secret', confirm=True)
option: Str('ipaidpdevauthendpoint?', autofill=False, cli_name='dev_auth_uri')
option: Str('ipaidpissuerurl?', autofill=False, cli_name='issuer_url')
option: Str('ipaidpkeysendpoint?', autofill=False, cli_name='keys_uri')
option: Str('ipaidpscope?', autofill=False, cli_name='scope')
option: Str('ipaidpsub?', autofill=False, cli_name='idp_user_id')
option: Str('ipaidptokenendpoint?', autofill=False, cli_name='token_uri')
option: Str('ipaidpuserinfoendpoint?', autofill=False, cli_name='userinfo_uri')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: idp_mod/1
args: 1,18,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('ipaidpauthendpoint?', autofill=False, cli_name='auth_uri')
option: Str('ipaidpclientid?', autofill=False, cli_name='client_id')
option: Password('ipaidpclientsecret?', autofill=False, cli_name='secret', confirm=True)
option: Str('ipaidpdevauthendpoint?', autofill=False, cli_name='dev_auth_uri')
option: Str('ipaidpissuerurl?', autofill=False, cli_name='issuer_url')
option: Str('ipaidpkeysendpoint?', autofill=False, cli_name='keys_uri')
option: Str('ipaidpscope?', autofill=False, cli_name='scope')
option: Str('ipaidpsub?', autofill=False, cli_name='idp_user_id')
option: Str('ipaidptokenendpoint?', autofill=False, cli_name='token_uri')
option: Str('ipaidpuserinfoendpoint?', autofill=False, cli_name='userinfo_uri')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idp_show/1
args: 1,4,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idrange_add/1
args: 1,13,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: StrEnum('ipaautoprivategroups?', cli_name='auto_private_groups', values=[u'true', u'false', u'hybrid'])
option: Int('ipabaseid', cli_name='base_id')
option: Int('ipabaserid?', cli_name='rid_base')
option: Int('ipaidrangesize', cli_name='range_size')
option: Str('ipanttrusteddomainname?', cli_name='dom_name')
option: Str('ipanttrusteddomainsid?', cli_name='dom_sid')
option: StrEnum('iparangetype?', cli_name='type', values=[u'ipa-ad-trust', u'ipa-ad-trust-posix', u'ipa-local'])
option: Int('ipasecondarybaserid?', cli_name='secondary_rid_base')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idrange_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: idrange_find/1
args: 1,14,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: StrEnum('ipaautoprivategroups?', autofill=False, cli_name='auto_private_groups', values=[u'true', u'false', u'hybrid'])
option: Int('ipabaseid?', autofill=False, cli_name='base_id')
option: Int('ipabaserid?', autofill=False, cli_name='rid_base')
option: Int('ipaidrangesize?', autofill=False, cli_name='range_size')
option: Str('ipanttrusteddomainsid?', autofill=False, cli_name='dom_sid')
option: StrEnum('iparangetype?', autofill=False, cli_name='type', values=[u'ipa-ad-trust', u'ipa-ad-trust-posix', u'ipa-local'])
option: Int('ipasecondarybaserid?', autofill=False, cli_name='secondary_rid_base')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: idrange_mod/1
args: 1,14,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: StrEnum('ipaautoprivategroups?', autofill=False, cli_name='auto_private_groups', values=[u'true', u'false', u'hybrid'])
option: Int('ipabaseid?', autofill=False, cli_name='base_id')
option: Int('ipabaserid?', autofill=False, cli_name='rid_base')
option: Int('ipaidrangesize?', autofill=False, cli_name='range_size')
option: Str('ipanttrusteddomainname?', autofill=False, cli_name='dom_name', deprecated=True)
option: Str('ipanttrusteddomainsid?', autofill=False, cli_name='dom_sid', deprecated=True)
option: Int('ipasecondarybaserid?', autofill=False, cli_name='secondary_rid_base')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idrange_show/1
args: 1,4,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idview_add/1
args: 1,7,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Str('ipadomainresolutionorder?', cli_name='domain_resolution_order')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idview_apply/1
args: 1,3,4
arg: Str('cn', cli_name='name')
option: Str('host*', cli_name='hosts')
option: Str('hostgroup*', cli_name='hostgroups')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Output('succeeded', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
command: idview_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: idview_find/1
args: 1,8,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: idview_mod/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('ipadomainresolutionorder?', autofill=False, cli_name='domain_resolution_order')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idview_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Flag('show_hosts?', autofill=True, cli_name='show_hosts', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: idview_unapply/1
args: 0,3,4
option: Str('host*', cli_name='hosts')
option: Str('hostgroup*', cli_name='hostgroups')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Output('succeeded', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
command: join/1
args: 1,4,0
arg: Str('cn', autofill=True, cli_name='hostname')
option: Str('nshardwareplatform?', cli_name='platform')
option: Str('nsosversion?', cli_name='os')
option: Str('realm', autofill=True)
option: Str('version?')
command: json_metadata/1
args: 2,4,3
arg: Str('objname?')
arg: Str('methodname?')
option: Str('command?')
option: Str('method?')
option: Str('object?')
option: Str('version?')
output: Output('commands', type=[<type 'dict'>])
output: Output('methods', type=[<type 'dict'>])
output: Output('objects', type=[<type 'dict'>])
command: kra_is_enabled/1
args: 0,1,3
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: krbtpolicy_mod/1
args: 1,21,3
arg: Str('uid?', cli_name='user')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Int('krbauthindmaxrenewableage_hardened?', autofill=False, cli_name='hardened_maxrenew')
option: Int('krbauthindmaxrenewableage_idp?', autofill=False, cli_name='idp_maxrenew')
option: Int('krbauthindmaxrenewableage_otp?', autofill=False, cli_name='otp_maxrenew')
option: Int('krbauthindmaxrenewableage_passkey?', autofill=False, cli_name='passkey_maxrenew')
option: Int('krbauthindmaxrenewableage_pkinit?', autofill=False, cli_name='pkinit_maxrenew')
option: Int('krbauthindmaxrenewableage_radius?', autofill=False, cli_name='radius_maxrenew')
option: Int('krbauthindmaxticketlife_hardened?', autofill=False, cli_name='hardened_maxlife')
option: Int('krbauthindmaxticketlife_idp?', autofill=False, cli_name='idp_maxlife')
option: Int('krbauthindmaxticketlife_otp?', autofill=False, cli_name='otp_maxlife')
option: Int('krbauthindmaxticketlife_passkey?', autofill=False, cli_name='passkey_maxlife')
option: Int('krbauthindmaxticketlife_pkinit?', autofill=False, cli_name='pkinit_maxlife')
option: Int('krbauthindmaxticketlife_radius?', autofill=False, cli_name='radius_maxlife')
option: Int('krbmaxrenewableage?', autofill=False, cli_name='maxrenew')
option: Int('krbmaxticketlife?', autofill=False, cli_name='maxlife')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: krbtpolicy_reset/1
args: 1,3,3
arg: Str('uid?', cli_name='user')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: krbtpolicy_show/1
args: 1,4,3
arg: Str('uid?', cli_name='user')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: location_add/1
args: 1,6,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: location_del/1
args: 1,2,3
arg: DNSNameParam('idnsname+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: location_find/1
args: 1,8,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', autofill=False)
option: DNSNameParam('idnsname?', autofill=False, cli_name='name')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: location_mod/1
args: 1,8,3
arg: DNSNameParam('idnsname', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: location_show/1
args: 1,4,4
arg: DNSNameParam('idnsname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('servers', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: migrate_ds/1
args: 2,20,4
arg: Str('ldapuri', cli_name='ldap_uri')
arg: Password('bindpw', cli_name='password', confirm=False)
option: DNParam('basedn?', cli_name='base_dn')
option: DNParam('binddn?', autofill=True, cli_name='bind_dn', default=ipapython.dn.DN('cn=directory manager'))
option: Str('cacertfile?', cli_name='ca_cert_file')
option: Flag('compat?', autofill=True, cli_name='with_compat', default=False)
option: Flag('continue?', autofill=True, default=False)
option: Str('exclude_groups*', autofill=True, cli_name='exclude_groups', default=[])
option: Str('exclude_users*', autofill=True, cli_name='exclude_users', default=[])
option: DNParam('groupcontainer', autofill=True, cli_name='group_container', default=ipapython.dn.DN('ou=groups'))
option: Str('groupignoreattribute*', autofill=True, cli_name='group_ignore_attribute', default=[])
option: Str('groupignoreobjectclass*', autofill=True, cli_name='group_ignore_objectclass', default=[])
option: Str('groupobjectclass+', autofill=True, cli_name='group_objectclass', default=[u'groupOfUniqueNames', u'groupOfNames'])
option: Flag('groupoverwritegid', autofill=True, cli_name='group_overwrite_gid', default=False)
option: StrEnum('schema?', autofill=True, cli_name='schema', default=u'RFC2307bis', values=[u'RFC2307bis', u'RFC2307'])
option: StrEnum('scope', autofill=True, cli_name='scope', default=u'onelevel', values=[u'base', u'onelevel', u'subtree'])
option: Bool('use_def_group?', autofill=True, cli_name='use_default_group', default=True)
option: DNParam('usercontainer', autofill=True, cli_name='user_container', default=ipapython.dn.DN('ou=people'))
option: Str('userignoreattribute*', autofill=True, cli_name='user_ignore_attribute', default=[])
option: Str('userignoreobjectclass*', autofill=True, cli_name='user_ignore_objectclass', default=[])
option: Str('userobjectclass+', autofill=True, cli_name='user_objectclass', default=[u'person'])
option: Str('version?')
output: Output('compat', type=[<type 'bool'>])
output: Output('enabled', type=[<type 'bool'>])
output: Output('failed', type=[<type 'dict'>])
output: Output('result', type=[<type 'dict'>])
command: netgroup_add/1
args: 1,11,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Str('externalhost*')
option: StrEnum('hostcategory?', cli_name='hostcat', values=[u'all'])
option: Str('nisdomainname?', cli_name='nisdomain')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: StrEnum('usercategory?', cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: netgroup_add_member/1
args: 1,9,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Str('netgroup*', alwaysask=True, cli_name='netgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: netgroup_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: netgroup_find/1
args: 1,28,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('externalhost*', autofill=False)
option: Str('group*', cli_name='groups')
option: Str('host*', cli_name='hosts')
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: Str('hostgroup*', cli_name='hostgroups')
option: Str('in_netgroup*', cli_name='in_netgroups')
option: Str('ipauniqueid?', autofill=False, cli_name='uuid')
option: Flag('managed', autofill=True, cli_name='managed', default=False)
option: Str('netgroup*', cli_name='netgroups')
option: Str('nisdomainname?', autofill=False, cli_name='nisdomain')
option: Str('no_group*', cli_name='no_groups')
option: Str('no_host*', cli_name='no_hosts')
option: Str('no_hostgroup*', cli_name='no_hostgroups')
option: Flag('no_members', autofill=True, default=True)
option: Str('no_netgroup*', cli_name='no_netgroups')
option: Str('no_user*', cli_name='no_users')
option: Str('not_in_netgroup*', cli_name='not_in_netgroups')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('private', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('user*', cli_name='users')
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: netgroup_mod/1
args: 1,13,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('externalhost*', autofill=False)
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: Str('nisdomainname?', autofill=False, cli_name='nisdomain')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: netgroup_remove_member/1
args: 1,9,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Str('netgroup*', alwaysask=True, cli_name='netgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: netgroup_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: otpconfig_mod/1
args: 0,11,3
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Int('ipatokenhotpauthwindow?', autofill=False, cli_name='hotp_auth_window')
option: Int('ipatokenhotpsyncwindow?', autofill=False, cli_name='hotp_sync_window')
option: Int('ipatokentotpauthwindow?', autofill=False, cli_name='totp_auth_window')
option: Int('ipatokentotpsyncwindow?', autofill=False, cli_name='totp_sync_window')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: otpconfig_show/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: otptoken_add/1
args: 1,23,3
arg: Str('ipatokenuniqueid?', cli_name='id')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Bool('ipatokendisabled?', cli_name='disabled')
option: Int('ipatokenhotpcounter?', autofill=True, cli_name='counter', default=0)
option: Str('ipatokenmodel?', cli_name='model')
option: DateTime('ipatokennotafter?', cli_name='not_after')
option: DateTime('ipatokennotbefore?', cli_name='not_before')
option: StrEnum('ipatokenotpalgorithm?', autofill=True, cli_name='algo', default=u'sha1', values=[u'sha1', u'sha256', u'sha384', u'sha512'])
option: IntEnum('ipatokenotpdigits?', autofill=True, cli_name='digits', default=6, values=[6, 8])
option: OTPTokenKey('ipatokenotpkey?', autofill=True, cli_name='key')
option: Str('ipatokenowner?', cli_name='owner')
option: Str('ipatokenserial?', cli_name='serial')
option: Int('ipatokentotpclockoffset?', autofill=True, cli_name='offset', default=0)
option: Int('ipatokentotptimestep?', autofill=True, cli_name='interval', default=30)
option: Str('ipatokenvendor?', cli_name='vendor')
option: Flag('no_members', autofill=True, default=False)
option: Flag('no_qrcode', autofill=True, default=False)
option: Flag('qrcode?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: StrEnum('type?', autofill=True, default=u'totp', values=[u'totp', u'hotp', u'TOTP', u'HOTP'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: otptoken_add_managedby/1
args: 1,5,3
arg: Str('ipatokenuniqueid', cli_name='id')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: otptoken_del/1
args: 1,2,3
arg: Str('ipatokenuniqueid+', cli_name='id')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: otptoken_find/1
args: 1,22,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', autofill=False, cli_name='desc')
option: Bool('ipatokendisabled?', autofill=False, cli_name='disabled')
option: Int('ipatokenhotpcounter?', autofill=False, cli_name='counter', default=0)
option: Str('ipatokenmodel?', autofill=False, cli_name='model')
option: DateTime('ipatokennotafter?', autofill=False, cli_name='not_after')
option: DateTime('ipatokennotbefore?', autofill=False, cli_name='not_before')
option: StrEnum('ipatokenotpalgorithm?', autofill=False, cli_name='algo', default=u'sha1', values=[u'sha1', u'sha256', u'sha384', u'sha512'])
option: IntEnum('ipatokenotpdigits?', autofill=False, cli_name='digits', default=6, values=[6, 8])
option: Str('ipatokenowner?', autofill=False, cli_name='owner')
option: Str('ipatokenserial?', autofill=False, cli_name='serial')
option: Int('ipatokentotpclockoffset?', autofill=False, cli_name='offset', default=0)
option: Int('ipatokentotptimestep?', autofill=False, cli_name='interval', default=30)
option: Str('ipatokenuniqueid?', autofill=False, cli_name='id')
option: Str('ipatokenvendor?', autofill=False, cli_name='vendor')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: StrEnum('type?', autofill=False, default=u'totp', values=[u'totp', u'hotp', u'TOTP', u'HOTP'])
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: otptoken_mod/1
args: 1,17,3
arg: Str('ipatokenuniqueid', cli_name='id')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Bool('ipatokendisabled?', autofill=False, cli_name='disabled')
option: Str('ipatokenmodel?', autofill=False, cli_name='model')
option: DateTime('ipatokennotafter?', autofill=False, cli_name='not_after')
option: DateTime('ipatokennotbefore?', autofill=False, cli_name='not_before')
option: Str('ipatokenowner?', autofill=False, cli_name='owner')
option: Str('ipatokenserial?', autofill=False, cli_name='serial')
option: Str('ipatokenvendor?', autofill=False, cli_name='vendor')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: otptoken_remove_managedby/1
args: 1,5,3
arg: Str('ipatokenuniqueid', cli_name='id')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: otptoken_show/1
args: 1,5,3
arg: Str('ipatokenuniqueid', cli_name='id')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: output_find/1
args: 2,4,4
arg: Str('commandfull_name', cli_name='command')
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: output_show/1
args: 2,3,3
arg: Str('commandfull_name', cli_name='command')
arg: Str('name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: param_find/1
args: 2,4,4
arg: Str('metaobjectfull_name', cli_name='metaobject')
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: param_show/1
args: 2,3,3
arg: Str('metaobjectfull_name', cli_name='metaobject')
arg: Str('name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: passkeyconfig_mod/1
args: 0,8,3
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Bool('iparequireuserverification?', autofill=False, cli_name='require_user_verification')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: passkeyconfig_show/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: passwd/1
args: 3,2,3
arg: Principal('principal', autofill=True, cli_name='user')
arg: Password('password')
arg: Password('current_password', autofill=True, confirm=False)
option: Password('otp?', confirm=False)
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: permission_add/1
args: 1,21,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*')
option: Str('extratargetfilter*', cli_name='filter')
option: Str('filter*')
option: StrEnum('ipapermbindruletype', autofill=True, cli_name='bindtype', default=u'permission', values=[u'permission', u'all', u'anonymous', u'self'])
option: DNOrURL('ipapermlocation?', alwaysask=True, autofill=False, cli_name='subtree')
option: StrEnum('ipapermright*', alwaysask=True, autofill=False, cli_name='right', values=[u'read', u'search', u'compare', u'write', u'add', u'delete', u'all'])
option: DNParam('ipapermtarget?', cli_name='target')
option: Str('ipapermtargetfilter*', cli_name='rawfilter')
option: DNParam('ipapermtargetfrom?', cli_name='targetfrom')
option: DNParam('ipapermtargetto?', cli_name='targetto')
option: Str('memberof*', alwaysask=True, autofill=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('permissions*')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('subtree*')
option: Str('targetgroup?', alwaysask=True, autofill=False)
option: Str('type?', alwaysask=True, autofill=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: permission_add_member/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('privilege*', alwaysask=True, cli_name='privileges')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: permission_add_noaci/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('ipapermissiontype+')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: permission_del/1
args: 1,3,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Flag('force', autofill=True, default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: permission_find/1
args: 1,26,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', autofill=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('extratargetfilter*', autofill=False, cli_name='filter')
option: Str('filter*', autofill=False)
option: StrEnum('ipapermbindruletype?', autofill=False, cli_name='bindtype', default=u'permission', values=[u'permission', u'all', u'anonymous', u'self'])
option: Str('ipapermdefaultattr*', autofill=False, cli_name='defaultattrs')
option: Str('ipapermexcludedattr*', autofill=False, cli_name='excludedattrs')
option: Str('ipapermincludedattr*', autofill=False, cli_name='includedattrs')
option: DNOrURL('ipapermlocation?', autofill=False, cli_name='subtree')
option: StrEnum('ipapermright*', autofill=False, cli_name='right', values=[u'read', u'search', u'compare', u'write', u'add', u'delete', u'all'])
option: DNParam('ipapermtarget?', autofill=False, cli_name='target')
option: Str('ipapermtargetfilter*', autofill=False, cli_name='rawfilter')
option: DNParam('ipapermtargetfrom?', autofill=False, cli_name='targetfrom')
option: DNParam('ipapermtargetto?', autofill=False, cli_name='targetto')
option: Str('memberof*', autofill=False)
option: Flag('no_members', autofill=True, default=True)
option: Str('permissions*', autofill=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Str('subtree*', autofill=False)
option: Str('targetgroup?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('type?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: permission_mod/1
args: 1,26,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', autofill=False)
option: Str('delattr*', cli_name='delattr')
option: Str('extratargetfilter*', autofill=False, cli_name='filter')
option: Str('filter*', autofill=False)
option: StrEnum('ipapermbindruletype?', autofill=False, cli_name='bindtype', default=u'permission', values=[u'permission', u'all', u'anonymous', u'self'])
option: Str('ipapermexcludedattr*', autofill=False, cli_name='excludedattrs')
option: Str('ipapermincludedattr*', autofill=False, cli_name='includedattrs')
option: DNOrURL('ipapermlocation?', autofill=False, cli_name='subtree')
option: StrEnum('ipapermright*', autofill=False, cli_name='right', values=[u'read', u'search', u'compare', u'write', u'add', u'delete', u'all'])
option: DNParam('ipapermtarget?', autofill=False, cli_name='target')
option: Str('ipapermtargetfilter*', autofill=False, cli_name='rawfilter')
option: DNParam('ipapermtargetfrom?', autofill=False, cli_name='targetfrom')
option: DNParam('ipapermtargetto?', autofill=False, cli_name='targetto')
option: Str('memberof*', autofill=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('permissions*', autofill=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('subtree*', autofill=False)
option: Str('targetgroup?', autofill=False)
option: Str('type?', autofill=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: permission_remove_member/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('privilege*', alwaysask=True, cli_name='privileges')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: permission_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: ping/1
args: 0,1,1
option: Str('version?')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
command: pkinit_status/1
args: 1,7,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('server_server?', autofill=False, cli_name='server')
option: Int('sizelimit?', autofill=False)
option: StrEnum('status?', autofill=False, cli_name='status', values=[u'enabled', u'disabled'])
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: plugins/1
args: 0,3,3
option: Flag('all', autofill=True, cli_name='all', default=True)
option: Flag('server?', autofill=True, default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
command: privilege_add/1
args: 1,7,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: privilege_add_member/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('role*', alwaysask=True, cli_name='roles')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: privilege_add_permission/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('permission*', alwaysask=True, cli_name='permissions')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: privilege_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: privilege_find/1
args: 1,9,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: privilege_mod/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: privilege_remove_member/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('role*', alwaysask=True, cli_name='roles')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: privilege_remove_permission/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('permission*', alwaysask=True, cli_name='permissions')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: privilege_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: pwpolicy_add/1
args: 1,19,3
arg: Str('cn', cli_name='group')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Int('cospriority', cli_name='priority')
option: Bool('ipapwddictcheck?', cli_name='dictcheck', default=False)
option: Int('ipapwdmaxrepeat?', cli_name='maxrepeat', default=0)
option: Int('ipapwdmaxsequence?', cli_name='maxsequence', default=0)
option: Bool('ipapwdusercheck?', cli_name='usercheck', default=False)
option: Int('krbmaxpwdlife?', cli_name='maxlife')
option: Int('krbminpwdlife?', cli_name='minlife')
option: Int('krbpwdfailurecountinterval?', cli_name='failinterval')
option: Int('krbpwdhistorylength?', cli_name='history')
option: Int('krbpwdlockoutduration?', cli_name='lockouttime')
option: Int('krbpwdmaxfailure?', cli_name='maxfail')
option: Int('krbpwdmindiffchars?', cli_name='minclasses')
option: Int('krbpwdminlength?', cli_name='minlength')
option: Int('passwordgracelimit?', autofill=True, cli_name='gracelimit', default=-1)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: pwpolicy_del/1
args: 1,2,3
arg: Str('cn+', cli_name='group')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: pwpolicy_find/1
args: 1,21,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='group')
option: Int('cospriority?', autofill=False, cli_name='priority')
option: Bool('ipapwddictcheck?', autofill=False, cli_name='dictcheck', default=False)
option: Int('ipapwdmaxrepeat?', autofill=False, cli_name='maxrepeat', default=0)
option: Int('ipapwdmaxsequence?', autofill=False, cli_name='maxsequence', default=0)
option: Bool('ipapwdusercheck?', autofill=False, cli_name='usercheck', default=False)
option: Int('krbmaxpwdlife?', autofill=False, cli_name='maxlife')
option: Int('krbminpwdlife?', autofill=False, cli_name='minlife')
option: Int('krbpwdfailurecountinterval?', autofill=False, cli_name='failinterval')
option: Int('krbpwdhistorylength?', autofill=False, cli_name='history')
option: Int('krbpwdlockoutduration?', autofill=False, cli_name='lockouttime')
option: Int('krbpwdmaxfailure?', autofill=False, cli_name='maxfail')
option: Int('krbpwdmindiffchars?', autofill=False, cli_name='minclasses')
option: Int('krbpwdminlength?', autofill=False, cli_name='minlength')
option: Int('passwordgracelimit?', autofill=False, cli_name='gracelimit', default=-1)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: pwpolicy_mod/1
args: 1,21,3
arg: Str('cn?', cli_name='group')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Int('cospriority?', autofill=False, cli_name='priority')
option: Str('delattr*', cli_name='delattr')
option: Bool('ipapwddictcheck?', autofill=False, cli_name='dictcheck', default=False)
option: Int('ipapwdmaxrepeat?', autofill=False, cli_name='maxrepeat', default=0)
option: Int('ipapwdmaxsequence?', autofill=False, cli_name='maxsequence', default=0)
option: Bool('ipapwdusercheck?', autofill=False, cli_name='usercheck', default=False)
option: Int('krbmaxpwdlife?', autofill=False, cli_name='maxlife')
option: Int('krbminpwdlife?', autofill=False, cli_name='minlife')
option: Int('krbpwdfailurecountinterval?', autofill=False, cli_name='failinterval')
option: Int('krbpwdhistorylength?', autofill=False, cli_name='history')
option: Int('krbpwdlockoutduration?', autofill=False, cli_name='lockouttime')
option: Int('krbpwdmaxfailure?', autofill=False, cli_name='maxfail')
option: Int('krbpwdmindiffchars?', autofill=False, cli_name='minclasses')
option: Int('krbpwdminlength?', autofill=False, cli_name='minlength')
option: Int('passwordgracelimit?', autofill=False, cli_name='gracelimit', default=-1)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: pwpolicy_show/1
args: 1,5,3
arg: Str('cn?', cli_name='group')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('user?')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: radiusproxy_add/1
args: 1,11,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Int('ipatokenradiusretries?', cli_name='retries')
option: Password('ipatokenradiussecret', cli_name='secret', confirm=True)
option: Str('ipatokenradiusserver', cli_name='server')
option: Int('ipatokenradiustimeout?', cli_name='timeout')
option: Str('ipatokenusermapattribute?', cli_name='userattr')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: radiusproxy_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: radiusproxy_find/1
args: 1,13,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: Int('ipatokenradiusretries?', autofill=False, cli_name='retries')
option: Password('ipatokenradiussecret?', autofill=False, cli_name='secret', confirm=True)
option: Str('ipatokenradiusserver?', autofill=False, cli_name='server')
option: Int('ipatokenradiustimeout?', autofill=False, cli_name='timeout')
option: Str('ipatokenusermapattribute?', autofill=False, cli_name='userattr')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: radiusproxy_mod/1
args: 1,14,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Int('ipatokenradiusretries?', autofill=False, cli_name='retries')
option: Password('ipatokenradiussecret?', autofill=False, cli_name='secret', confirm=True)
option: Str('ipatokenradiusserver?', autofill=False, cli_name='server')
option: Int('ipatokenradiustimeout?', autofill=False, cli_name='timeout')
option: Str('ipatokenusermapattribute?', autofill=False, cli_name='userattr')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: radiusproxy_show/1
args: 1,4,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: realmdomains_mod/1
args: 0,11,3
option: Str('add_domain?', autofill=False, cli_name='add_domain')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('associateddomain*', autofill=False, cli_name='domain')
option: Str('del_domain?', autofill=False, cli_name='del_domain')
option: Str('delattr*', cli_name='delattr')
option: Flag('force', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: realmdomains_show/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: role_add/1
args: 1,7,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: role_add_member/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Str('idoverrideuser*', alwaysask=True, cli_name='idoverrideusers')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('service*', alwaysask=True, cli_name='services')
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: role_add_privilege/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('privilege*', alwaysask=True, cli_name='privileges')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: role_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: role_find/1
args: 1,9,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: role_mod/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: role_remove_member/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Str('idoverrideuser*', alwaysask=True, cli_name='idoverrideusers')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('service*', alwaysask=True, cli_name='services')
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: role_remove_privilege/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('privilege*', alwaysask=True, cli_name='privileges')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: role_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: schema/1
args: 0,2,1
option: Str('known_fingerprints*')
option: Str('version?')
output: Output('result')
command: selfservice_add/1
args: 1,5,3
arg: Str('aciname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs+', cli_name='attrs')
option: Str('permissions*', cli_name='permissions')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: selfservice_del/1
args: 1,1,3
arg: Str('aciname', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: selfservice_find/1
args: 1,7,4
arg: Str('criteria?')
option: Str('aciname?', autofill=False, cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', autofill=False, cli_name='attrs')
option: Str('permissions*', autofill=False, cli_name='permissions')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: selfservice_mod/1
args: 1,5,3
arg: Str('aciname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('attrs*', autofill=False, cli_name='attrs')
option: Str('permissions*', autofill=False, cli_name='permissions')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: selfservice_show/1
args: 1,3,3
arg: Str('aciname', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: selinuxusermap_add/1
args: 1,12,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: StrEnum('hostcategory?', cli_name='hostcat', values=[u'all'])
option: Bool('ipaenabledflag?')
option: Str('ipaselinuxuser', cli_name='selinuxuser')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('seealso?', cli_name='hbacrule')
option: Str('setattr*', cli_name='setattr')
option: StrEnum('usercategory?', cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: selinuxusermap_add_host/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: selinuxusermap_add_user/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: selinuxusermap_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: selinuxusermap_disable/1
args: 1,1,3
arg: Str('cn', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: selinuxusermap_enable/1
args: 1,1,3
arg: Str('cn', cli_name='name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: selinuxusermap_find/1
args: 1,14,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: Bool('ipaenabledflag?', autofill=False)
option: Str('ipaselinuxuser?', autofill=False, cli_name='selinuxuser')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('seealso?', autofill=False, cli_name='hbacrule')
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: selinuxusermap_mod/1
args: 1,14,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: Bool('ipaenabledflag?', autofill=False)
option: Str('ipaselinuxuser?', autofill=False, cli_name='selinuxuser')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('seealso?', autofill=False, cli_name='hbacrule')
option: Str('setattr*', cli_name='setattr')
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: selinuxusermap_remove_host/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: selinuxusermap_remove_user/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: selinuxusermap_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: server_conncheck/1
args: 2,1,3
arg: Str('cn', cli_name='name')
arg: Str('remote_cn', cli_name='remote_name')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: server_del/1
args: 1,5,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Flag('force?', autofill=True, default=False)
option: Flag('ignore_last_of_role?', autofill=True, default=False)
option: Flag('ignore_topology_disconnect?', autofill=True, default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: server_find/1
args: 1,15,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: DNSNameParam('in_location*', cli_name='in_locations')
option: Int('ipamaxdomainlevel?', autofill=False, cli_name='maxlevel')
option: Int('ipamindomainlevel?', autofill=False, cli_name='minlevel')
option: Flag('no_members', autofill=True, default=True)
option: Str('no_topologysuffix*', cli_name='no_topologysuffixes')
option: DNSNameParam('not_in_location*', cli_name='not_in_locations')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('servrole*', cli_name='servroles')
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('topologysuffix*', cli_name='topologysuffixes')
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: server_mod/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: DNSNameParam('ipalocation_location?', autofill=False, cli_name='location')
option: Int('ipaserviceweight?', autofill=False, cli_name='service_weight')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: server_role_find/1
args: 1,9,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('include_master', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('role_servrole?', autofill=False, cli_name='role')
option: Str('server_server?', autofill=False, cli_name='server')
option: Int('sizelimit?', autofill=False)
option: StrEnum('status?', autofill=False, cli_name='status', default=u'enabled', values=[u'enabled', u'configured', u'hidden', u'absent'])
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: server_role_show/1
args: 2,3,3
arg: Str('server_server', cli_name='server')
arg: Str('role_servrole', cli_name='role')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: server_show/1
args: 1,5,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: server_state/1
args: 1,2,3
arg: Str('cn', cli_name='name')
option: StrEnum('state', values=[u'enabled', u'hidden'])
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_add/1
args: 1,14,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('force', autofill=True, default=False)
option: StrEnum('ipakrbauthzdata*', cli_name='pac_type', values=[u'MS-PAC', u'PAD', u'NONE'])
option: Bool('ipakrbokasdelegate?', cli_name='ok_as_delegate')
option: Bool('ipakrboktoauthasdelegate?', cli_name='ok_to_auth_as_delegate')
option: Bool('ipakrbrequirespreauth?', cli_name='requires_pre_auth')
option: StrEnum('krbprincipalauthind*', cli_name='auth_ind', values=[u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Flag('skip_host_check', autofill=True, default=False)
option: Certificate('usercertificate*', cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_add_cert/1
args: 1,5,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_add_delegation/1
args: 2,4,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
arg: Str('memberprincipal+', alwaysask=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_add_host/1
args: 1,5,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: service_add_principal/1
args: 2,4,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
arg: Principal('krbprincipalname+', alwaysask=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_add_smb/1
args: 2,9,3
arg: Str('fqdn', cli_name='hostname')
arg: Str('ipantflatname?', cli_name='netbiosname')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Bool('ipakrbokasdelegate?', cli_name='ok_as_delegate')
option: Bool('ipakrboktoauthasdelegate?', cli_name='ok_to_auth_as_delegate')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Certificate('usercertificate*', cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_allow_add_delegation/1
args: 1,8,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: service_allow_create_keytab/1
args: 1,8,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: service_allow_retrieve_keytab/1
args: 1,8,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: service_del/1
args: 1,2,3
arg: Principal('krbcanonicalname+', cli_name='canonical_principal')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: service_disable/1
args: 1,1,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_disallow_add_delegation/1
args: 1,8,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: service_disallow_create_keytab/1
args: 1,8,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: service_disallow_retrieve_keytab/1
args: 1,8,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: service_find/1
args: 1,13,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: StrEnum('ipakrbauthzdata*', autofill=False, cli_name='pac_type', values=[u'MS-PAC', u'PAD', u'NONE'])
option: Principal('krbcanonicalname?', autofill=False, cli_name='canonical_principal')
option: StrEnum('krbprincipalauthind*', autofill=False, cli_name='auth_ind', values=[u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: Principal('krbprincipalname*', autofill=False, cli_name='principal')
option: Str('man_by_host*', cli_name='man_by_hosts')
option: Flag('no_members', autofill=True, default=True)
option: Str('not_man_by_host*', cli_name='not_man_by_hosts')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: service_mod/1
args: 1,15,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: StrEnum('ipakrbauthzdata*', autofill=False, cli_name='pac_type', values=[u'MS-PAC', u'PAD', u'NONE'])
option: Bool('ipakrbokasdelegate?', autofill=False, cli_name='ok_as_delegate')
option: Bool('ipakrboktoauthasdelegate?', autofill=False, cli_name='ok_to_auth_as_delegate')
option: Bool('ipakrbrequirespreauth?', autofill=False, cli_name='requires_pre_auth')
option: StrEnum('krbprincipalauthind*', autofill=False, cli_name='auth_ind', values=[u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: Principal('krbprincipalname*', autofill=False, cli_name='principal')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Certificate('usercertificate*', autofill=False, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_remove_cert/1
args: 1,5,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_remove_delegation/1
args: 2,4,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
arg: Str('memberprincipal+', alwaysask=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_remove_host/1
args: 1,5,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: service_remove_principal/1
args: 2,4,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
arg: Principal('krbprincipalname+', alwaysask=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: service_show/1
args: 1,6,3
arg: Principal('krbcanonicalname', cli_name='canonical_principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('out?')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: servicedelegationrule_add/1
args: 1,6,3
arg: Str('cn', cli_name='delegation_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: servicedelegationrule_add_member/1
args: 1,5,3
arg: Str('cn', cli_name='delegation_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('principal*', alwaysask=True, cli_name='principals')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: servicedelegationrule_add_target/1
args: 1,5,3
arg: Str('cn', cli_name='delegation_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('servicedelegationtarget*', alwaysask=True, cli_name='servicedelegationtargets')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: servicedelegationrule_del/1
args: 1,2,3
arg: Str('cn+', cli_name='delegation_name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: servicedelegationrule_find/1
args: 1,8,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='delegation_name')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: servicedelegationrule_remove_member/1
args: 1,5,3
arg: Str('cn', cli_name='delegation_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('principal*', alwaysask=True, cli_name='principals')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: servicedelegationrule_remove_target/1
args: 1,5,3
arg: Str('cn', cli_name='delegation_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('servicedelegationtarget*', alwaysask=True, cli_name='servicedelegationtargets')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: servicedelegationrule_show/1
args: 1,5,3
arg: Str('cn', cli_name='delegation_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: servicedelegationtarget_add/1
args: 1,5,3
arg: Str('cn', cli_name='delegation_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: servicedelegationtarget_add_member/1
args: 1,4,3
arg: Str('cn', cli_name='delegation_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('principal*', alwaysask=True, cli_name='principals')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: servicedelegationtarget_del/1
args: 1,2,3
arg: Str('cn+', cli_name='delegation_name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: servicedelegationtarget_find/1
args: 1,7,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='delegation_name')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: servicedelegationtarget_remove_member/1
args: 1,4,3
arg: Str('cn', cli_name='delegation_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('principal*', alwaysask=True, cli_name='principals')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: servicedelegationtarget_show/1
args: 1,4,3
arg: Str('cn', cli_name='delegation_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: session_logout/1
args: 0,1,1
option: Str('version?')
output: Output('result')
command: sidgen_was_run/1
args: 0,1,1
option: Str('version?')
output: Output('result')
command: stageuser_activate/1
args: 1,4,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_add/1
args: 1,47,3
arg: Str('uid', cli_name='login')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('carlicense*')
option: Str('cn', autofill=True)
option: Str('departmentnumber*')
option: Str('displayname?', autofill=True)
option: Str('employeenumber?')
option: Str('employeetype?')
option: Str('facsimiletelephonenumber*', cli_name='fax')
option: Bool('from_delete?', cli_name='from_delete', deprecated=True)
option: Str('gecos?', autofill=True)
option: Int('gidnumber?')
option: Str('givenname', cli_name='first')
option: Str('homedirectory?', cli_name='homedir')
option: Str('initials?', autofill=True)
option: Str('ipaidpconfiglink?', cli_name='idp')
option: Str('ipaidpsub?', cli_name='idp_user_id')
option: Str('ipasshpubkey*', cli_name='sshpubkey')
option: Str('ipatokenradiusconfiglink?', cli_name='radius')
option: Str('ipatokenradiususername?', cli_name='radius_username')
option: StrEnum('ipauserauthtype*', cli_name='user_auth_type', values=[u'password', u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: DateTime('krbpasswordexpiration?', cli_name='password_expiration')
option: DateTime('krbprincipalexpiration?', cli_name='principal_expiration')
option: Principal('krbprincipalname*', autofill=True, cli_name='principal')
option: Str('l?', cli_name='city')
option: Str('loginshell?', cli_name='shell')
option: Str('mail*', cli_name='email')
option: Str('manager?')
option: Str('mobile*')
option: Flag('no_members', autofill=True, default=False)
option: Str('ou?', cli_name='orgunit')
option: Str('pager*')
option: Str('postalcode?')
option: Str('preferredlanguage?')
option: Flag('random?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('sn', cli_name='last')
option: Str('st?', cli_name='state')
option: Str('street?', cli_name='street')
option: Str('telephonenumber*', cli_name='phone')
option: Str('title?')
option: Int('uidnumber?', cli_name='uid')
option: Certificate('usercertificate*', cli_name='certificate')
option: Str('userclass*', cli_name='class')
option: Password('userpassword?', cli_name='password')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_add_cert/1
args: 1,5,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_add_certmapdata/1
args: 2,7,3
arg: Str('uid', cli_name='login')
arg: Str('ipacertmapdata*', alwaysask=False, cli_name='certmapdata')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Certificate('certificate*', cli_name='certificate')
option: DNParam('issuer?', cli_name='issuer')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: DNParam('subject?', cli_name='subject')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_add_manager/1
args: 1,5,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: stageuser_add_passkey/1
args: 2,4,3
arg: Str('uid', cli_name='login')
arg: Str('ipapasskey+', alwaysask=True, cli_name='passkey')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_add_principal/1
args: 2,4,3
arg: Str('uid', cli_name='login')
arg: Principal('krbprincipalname+', alwaysask=True, autofill=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_del/1
args: 1,2,3
arg: Str('uid+', cli_name='login')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: stageuser_find/1
args: 1,62,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('carlicense*', autofill=False)
option: Str('cn?', autofill=False)
option: Str('departmentnumber*', autofill=False)
option: Str('displayname?', autofill=False)
option: Str('employeenumber?', autofill=False)
option: Str('employeetype?', autofill=False)
option: Str('facsimiletelephonenumber*', autofill=False, cli_name='fax')
option: Str('gecos?', autofill=False)
option: Int('gidnumber?', autofill=False)
option: Str('givenname?', autofill=False, cli_name='first')
option: Str('homedirectory?', autofill=False, cli_name='homedir')
option: Str('in_group*', cli_name='in_groups')
option: Str('in_hbacrule*', cli_name='in_hbacrules')
option: Str('in_netgroup*', cli_name='in_netgroups')
option: Str('in_role*', cli_name='in_roles')
option: Str('in_subid*', cli_name='in_subids')
option: Str('in_sudorule*', cli_name='in_sudorules')
option: Str('initials?', autofill=False)
option: Str('ipaidpconfiglink?', autofill=False, cli_name='idp')
option: Str('ipaidpsub?', autofill=False, cli_name='idp_user_id')
option: Str('ipanthomedirectory?', autofill=False, cli_name='smb_home_dir')
option: StrEnum('ipanthomedirectorydrive?', autofill=False, cli_name='smb_home_drive', values=[u'A:', u'B:', u'C:', u'D:', u'E:', u'F:', u'G:', u'H:', u'I:', u'J:', u'K:', u'L:', u'M:', u'N:', u'O:', u'P:', u'Q:', u'R:', u'S:', u'T:', u'U:', u'V:', u'W:', u'X:', u'Y:', u'Z:'])
option: Str('ipantlogonscript?', autofill=False, cli_name='smb_logon_script')
option: Str('ipantprofilepath?', autofill=False, cli_name='smb_profile_path')
option: Str('ipatokenradiusconfiglink?', autofill=False, cli_name='radius')
option: Str('ipatokenradiususername?', autofill=False, cli_name='radius_username')
option: StrEnum('ipauserauthtype*', autofill=False, cli_name='user_auth_type', values=[u'password', u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: DateTime('krbpasswordexpiration?', autofill=False, cli_name='password_expiration')
option: DateTime('krbprincipalexpiration?', autofill=False, cli_name='principal_expiration')
option: Principal('krbprincipalname*', autofill=False, cli_name='principal')
option: Str('l?', autofill=False, cli_name='city')
option: Str('loginshell?', autofill=False, cli_name='shell')
option: Str('mail*', autofill=False, cli_name='email')
option: Str('manager?', autofill=False)
option: Str('mobile*', autofill=False)
option: Flag('no_members', autofill=True, default=True)
option: Str('not_in_group*', cli_name='not_in_groups')
option: Str('not_in_hbacrule*', cli_name='not_in_hbacrules')
option: Str('not_in_netgroup*', cli_name='not_in_netgroups')
option: Str('not_in_role*', cli_name='not_in_roles')
option: Str('not_in_subid*', cli_name='not_in_subids')
option: Str('not_in_sudorule*', cli_name='not_in_sudorules')
option: Str('ou?', autofill=False, cli_name='orgunit')
option: Str('pager*', autofill=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Str('postalcode?', autofill=False)
option: Str('preferredlanguage?', autofill=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Str('sn?', autofill=False, cli_name='last')
option: Str('st?', autofill=False, cli_name='state')
option: Str('street?', autofill=False, cli_name='street')
option: Str('telephonenumber*', autofill=False, cli_name='phone')
option: Int('timelimit?', autofill=False)
option: Str('title?', autofill=False)
option: Str('uid?', autofill=False, cli_name='login')
option: Int('uidnumber?', autofill=False, cli_name='uid')
option: Certificate('usercertificate*', autofill=False, cli_name='certificate')
option: Str('userclass*', autofill=False, cli_name='class')
option: Password('userpassword?', autofill=False, cli_name='password')
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: stageuser_mod/1
args: 1,53,3
arg: Str('uid', cli_name='login')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('carlicense*', autofill=False)
option: Str('cn?', autofill=False)
option: Str('delattr*', cli_name='delattr')
option: Str('departmentnumber*', autofill=False)
option: Str('displayname?', autofill=False)
option: Str('employeenumber?', autofill=False)
option: Str('employeetype?', autofill=False)
option: Str('facsimiletelephonenumber*', autofill=False, cli_name='fax')
option: Str('gecos?', autofill=False)
option: Int('gidnumber?', autofill=False)
option: Str('givenname?', autofill=False, cli_name='first')
option: Str('homedirectory?', autofill=False, cli_name='homedir')
option: Str('initials?', autofill=False)
option: Str('ipaidpconfiglink?', autofill=False, cli_name='idp')
option: Str('ipaidpsub?', autofill=False, cli_name='idp_user_id')
option: Str('ipanthomedirectory?', autofill=False, cli_name='smb_home_dir')
option: StrEnum('ipanthomedirectorydrive?', autofill=False, cli_name='smb_home_drive', values=[u'A:', u'B:', u'C:', u'D:', u'E:', u'F:', u'G:', u'H:', u'I:', u'J:', u'K:', u'L:', u'M:', u'N:', u'O:', u'P:', u'Q:', u'R:', u'S:', u'T:', u'U:', u'V:', u'W:', u'X:', u'Y:', u'Z:'])
option: Str('ipantlogonscript?', autofill=False, cli_name='smb_logon_script')
option: Str('ipantprofilepath?', autofill=False, cli_name='smb_profile_path')
option: Str('ipasshpubkey*', autofill=False, cli_name='sshpubkey')
option: Str('ipatokenradiusconfiglink?', autofill=False, cli_name='radius')
option: Str('ipatokenradiususername?', autofill=False, cli_name='radius_username')
option: StrEnum('ipauserauthtype*', autofill=False, cli_name='user_auth_type', values=[u'password', u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: DateTime('krbpasswordexpiration?', autofill=False, cli_name='password_expiration')
option: DateTime('krbprincipalexpiration?', autofill=False, cli_name='principal_expiration')
option: Principal('krbprincipalname*', autofill=False, cli_name='principal')
option: Str('l?', autofill=False, cli_name='city')
option: Str('loginshell?', autofill=False, cli_name='shell')
option: Str('mail*', autofill=False, cli_name='email')
option: Str('manager?', autofill=False)
option: Str('mobile*', autofill=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('ou?', autofill=False, cli_name='orgunit')
option: Str('pager*', autofill=False)
option: Str('postalcode?', autofill=False)
option: Str('preferredlanguage?', autofill=False)
option: Flag('random?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('sn?', autofill=False, cli_name='last')
option: Str('st?', autofill=False, cli_name='state')
option: Str('street?', autofill=False, cli_name='street')
option: Str('telephonenumber*', autofill=False, cli_name='phone')
option: Str('title?', autofill=False)
option: Int('uidnumber?', autofill=False, cli_name='uid')
option: Certificate('usercertificate*', autofill=False, cli_name='certificate')
option: Str('userclass*', autofill=False, cli_name='class')
option: Password('userpassword?', autofill=False, cli_name='password')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_remove_cert/1
args: 1,5,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_remove_certmapdata/1
args: 2,7,3
arg: Str('uid', cli_name='login')
arg: Str('ipacertmapdata*', alwaysask=False, cli_name='certmapdata')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Certificate('certificate*', cli_name='certificate')
option: DNParam('issuer?', cli_name='issuer')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: DNParam('subject?', cli_name='subject')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_remove_manager/1
args: 1,5,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: stageuser_remove_passkey/1
args: 2,4,3
arg: Str('uid', cli_name='login')
arg: Str('ipapasskey+', alwaysask=True, cli_name='passkey')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_remove_principal/1
args: 2,4,3
arg: Str('uid', cli_name='login')
arg: Principal('krbprincipalname+', alwaysask=True, autofill=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: stageuser_show/1
args: 1,5,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: subid_add/1
args: 1,8,3
arg: Str('ipauniqueid?', cli_name='id')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Str('ipaowner', cli_name='owner')
option: Int('ipasubuidnumber?', cli_name='subuid')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: subid_del/1
args: 1,2,3
arg: Str('ipauniqueid+', cli_name='id')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: subid_find/1
args: 1,11,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', autofill=False, cli_name='desc')
option: Str('ipaowner?', autofill=False, cli_name='owner')
option: Int('ipasubgidnumber?', autofill=False, cli_name='subgid')
option: Int('ipasubuidnumber?', autofill=False, cli_name='subuid')
option: Str('ipauniqueid?', autofill=False, cli_name='id')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: subid_generate/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('ipaowner?', cli_name='owner')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: subid_match/1
args: 1,7,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Int('ipasubuidnumber', autofill=False, cli_name='subuid')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: subid_mod/1
args: 1,8,3
arg: Str('ipauniqueid', cli_name='id')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: subid_show/1
args: 1,4,3
arg: Str('ipauniqueid', cli_name='id')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: subid_stats/1
args: 0,3,2
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
command: sudocmd_add/1
args: 1,7,3
arg: Str('sudocmd', cli_name='command')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudocmd_del/1
args: 1,2,3
arg: Str('sudocmd+', cli_name='command')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: sudocmd_find/1
args: 1,9,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Str('sudocmd?', autofill=False, cli_name='command')
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: sudocmd_mod/1
args: 1,9,3
arg: Str('sudocmd', cli_name='command')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudocmd_show/1
args: 1,5,3
arg: Str('sudocmd', cli_name='command')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudocmdgroup_add/1
args: 1,7,3
arg: Str('cn', cli_name='sudocmdgroup_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudocmdgroup_add_member/1
args: 1,5,3
arg: Str('cn', cli_name='sudocmdgroup_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('sudocmd*', alwaysask=True, cli_name='sudocmds')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudocmdgroup_del/1
args: 1,2,3
arg: Str('cn+', cli_name='sudocmdgroup_name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: sudocmdgroup_find/1
args: 1,9,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='sudocmdgroup_name')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: sudocmdgroup_mod/1
args: 1,9,3
arg: Str('cn', cli_name='sudocmdgroup_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudocmdgroup_remove_member/1
args: 1,5,3
arg: Str('cn', cli_name='sudocmdgroup_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('sudocmd*', alwaysask=True, cli_name='sudocmds')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudocmdgroup_show/1
args: 1,5,3
arg: Str('cn', cli_name='sudocmdgroup_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudorule_add/1
args: 1,18,3
arg: Str('cn', cli_name='sudorule_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: StrEnum('cmdcategory?', cli_name='cmdcat', values=[u'all'])
option: Str('description?', cli_name='desc')
option: Str('externalhost*')
option: Str('externaluser?', cli_name='externaluser')
option: StrEnum('hostcategory?', cli_name='hostcat', values=[u'all'])
option: Bool('ipaenabledflag?')
option: Str('ipasudorunasextgroup?', cli_name='runasexternalgroup')
option: Str('ipasudorunasextuser?', cli_name='runasexternaluser')
option: StrEnum('ipasudorunasgroupcategory?', cli_name='runasgroupcat', values=[u'all'])
option: StrEnum('ipasudorunasusercategory?', cli_name='runasusercat', values=[u'all'])
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Int('sudoorder?', cli_name='order', default=0)
option: StrEnum('usercategory?', cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudorule_add_allow_command/1
args: 1,6,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('sudocmd*', alwaysask=True, cli_name='sudocmds')
option: Str('sudocmdgroup*', alwaysask=True, cli_name='sudocmdgroups')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_add_deny_command/1
args: 1,6,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('sudocmd*', alwaysask=True, cli_name='sudocmds')
option: Str('sudocmdgroup*', alwaysask=True, cli_name='sudocmdgroups')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_add_host/1
args: 1,7,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Str('hostmask*')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_add_option/1
args: 1,5,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('ipasudoopt+', cli_name='sudooption')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudorule_add_runasgroup/1
args: 1,5,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_add_runasuser/1
args: 1,6,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_add_user/1
args: 1,6,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_del/1
args: 1,2,3
arg: Str('cn+', cli_name='sudorule_name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: sudorule_disable/1
args: 1,1,1
arg: Str('cn', cli_name='sudorule_name')
option: Str('version?')
output: Output('result')
command: sudorule_enable/1
args: 1,1,1
arg: Str('cn', cli_name='sudorule_name')
option: Str('version?')
output: Output('result')
command: sudorule_find/1
args: 1,20,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: StrEnum('cmdcategory?', autofill=False, cli_name='cmdcat', values=[u'all'])
option: Str('cn?', autofill=False, cli_name='sudorule_name')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('externalhost*', autofill=False)
option: Str('externaluser?', autofill=False, cli_name='externaluser')
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: Bool('ipaenabledflag?', autofill=False)
option: Str('ipasudorunasextgroup?', autofill=False, cli_name='runasexternalgroup')
option: Str('ipasudorunasextuser?', autofill=False, cli_name='runasexternaluser')
option: StrEnum('ipasudorunasgroupcategory?', autofill=False, cli_name='runasgroupcat', values=[u'all'])
option: StrEnum('ipasudorunasusercategory?', autofill=False, cli_name='runasusercat', values=[u'all'])
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('sudoorder?', autofill=False, cli_name='order', default=0)
option: Int('timelimit?', autofill=False)
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: sudorule_mod/1
args: 1,21,3
arg: Str('cn', cli_name='sudorule_name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: StrEnum('cmdcategory?', autofill=False, cli_name='cmdcat', values=[u'all'])
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Str('externalhost*', autofill=False)
option: Str('externaluser?', autofill=False, cli_name='externaluser')
option: StrEnum('hostcategory?', autofill=False, cli_name='hostcat', values=[u'all'])
option: Bool('ipaenabledflag?', autofill=False)
option: Str('ipasudorunasextgroup?', autofill=False, cli_name='runasexternalgroup')
option: Str('ipasudorunasextuser?', autofill=False, cli_name='runasexternaluser')
option: StrEnum('ipasudorunasgroupcategory?', autofill=False, cli_name='runasgroupcat', values=[u'all'])
option: StrEnum('ipasudorunasusercategory?', autofill=False, cli_name='runasusercat', values=[u'all'])
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Int('sudoorder?', autofill=False, cli_name='order', default=0)
option: StrEnum('usercategory?', autofill=False, cli_name='usercat', values=[u'all'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudorule_remove_allow_command/1
args: 1,6,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('sudocmd*', alwaysask=True, cli_name='sudocmds')
option: Str('sudocmdgroup*', alwaysask=True, cli_name='sudocmdgroups')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_remove_deny_command/1
args: 1,6,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('sudocmd*', alwaysask=True, cli_name='sudocmds')
option: Str('sudocmdgroup*', alwaysask=True, cli_name='sudocmdgroups')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_remove_host/1
args: 1,7,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('host*', alwaysask=True, cli_name='hosts')
option: Str('hostgroup*', alwaysask=True, cli_name='hostgroups')
option: Str('hostmask*')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_remove_option/1
args: 1,5,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('ipasudoopt+', cli_name='sudooption')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: sudorule_remove_runasgroup/1
args: 1,5,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_remove_runasuser/1
args: 1,6,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_remove_user/1
args: 1,6,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: sudorule_show/1
args: 1,5,3
arg: Str('cn', cli_name='sudorule_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: topic_find/1
args: 1,4,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: topic_show/1
args: 1,3,3
arg: Str('full_name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: topologysegment_add/1
args: 2,13,3
arg: Str('topologysuffixcn', cli_name='topologysuffix')
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: StrEnum('iparepltoposegmentdirection', autofill=True, cli_name='direction', default=u'both', values=[u'both', u'left-right', u'right-left'])
option: Str('iparepltoposegmentleftnode', cli_name='leftnode')
option: Str('iparepltoposegmentrightnode', cli_name='rightnode')
option: StrEnum('nsds5replicaenabled?', cli_name='enabled', values=[u'on', u'off'])
option: Str('nsds5replicastripattrs?', cli_name='stripattrs')
option: Str('nsds5replicatedattributelist?', cli_name='replattrs')
option: Str('nsds5replicatedattributelisttotal?', cli_name='replattrstotal')
option: Int('nsds5replicatimeout?', cli_name='timeout')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: topologysegment_del/1
args: 2,2,3
arg: Str('topologysuffixcn', cli_name='topologysuffix')
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: topologysegment_find/1
args: 2,15,4
arg: Str('topologysuffixcn', cli_name='topologysuffix')
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: StrEnum('iparepltoposegmentdirection?', autofill=False, cli_name='direction', default=u'both', values=[u'both', u'left-right', u'right-left'])
option: Str('iparepltoposegmentleftnode?', autofill=False, cli_name='leftnode')
option: Str('iparepltoposegmentrightnode?', autofill=False, cli_name='rightnode')
option: StrEnum('nsds5replicaenabled?', autofill=False, cli_name='enabled', values=[u'on', u'off'])
option: Str('nsds5replicastripattrs?', autofill=False, cli_name='stripattrs')
option: Str('nsds5replicatedattributelist?', autofill=False, cli_name='replattrs')
option: Str('nsds5replicatedattributelisttotal?', autofill=False, cli_name='replattrstotal')
option: Int('nsds5replicatimeout?', autofill=False, cli_name='timeout')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: topologysegment_mod/1
args: 2,12,3
arg: Str('topologysuffixcn', cli_name='topologysuffix')
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: StrEnum('nsds5replicaenabled?', autofill=False, cli_name='enabled', values=[u'on', u'off'])
option: Str('nsds5replicastripattrs?', autofill=False, cli_name='stripattrs')
option: Str('nsds5replicatedattributelist?', autofill=False, cli_name='replattrs')
option: Str('nsds5replicatedattributelisttotal?', autofill=False, cli_name='replattrstotal')
option: Int('nsds5replicatimeout?', autofill=False, cli_name='timeout')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: topologysegment_reinitialize/1
args: 2,4,3
arg: Str('topologysuffixcn', cli_name='topologysuffix')
arg: Str('cn', cli_name='name')
option: Flag('left?', autofill=True, default=False)
option: Flag('right?', autofill=True, default=False)
option: Flag('stop?', autofill=True, default=False)
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: topologysegment_show/1
args: 2,4,3
arg: Str('topologysuffixcn', cli_name='topologysuffix')
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: topologysuffix_add/1
args: 1,6,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: DNParam('iparepltopoconfroot', cli_name='suffix_dn')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: topologysuffix_del/1
args: 1,2,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: topologysuffix_find/1
args: 1,8,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: DNParam('iparepltopoconfroot?', autofill=False, cli_name='suffix_dn')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: topologysuffix_mod/1
args: 1,8,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: DNParam('iparepltopoconfroot?', autofill=False, cli_name='suffix_dn')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: topologysuffix_show/1
args: 1,4,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: topologysuffix_verify/1
args: 1,1,1
arg: Str('cn', cli_name='name')
option: Str('version?')
output: Output('result')
command: trust_add/1
args: 1,15,3
arg: Str('cn', cli_name='realm')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Int('base_id?', cli_name='base_id')
option: Bool('bidirectional?', cli_name='two_way', default=False)
option: Bool('external?', cli_name='external', default=False)
option: Int('range_size?', cli_name='range_size')
option: StrEnum('range_type?', cli_name='range_type', values=[u'ipa-ad-trust', u'ipa-ad-trust-posix'])
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('realm_admin?', cli_name='admin')
option: Password('realm_passwd?', cli_name='password', confirm=False)
option: Str('realm_server?', cli_name='server')
option: Str('setattr*', cli_name='setattr')
option: Password('trust_secret?', cli_name='trust_secret', confirm=False)
option: StrEnum('trust_type', autofill=True, cli_name='type', default=u'ad', values=[u'ad'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: trust_del/1
args: 1,2,3
arg: Str('cn+', cli_name='realm')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: trust_enable_agent/1
args: 1,2,3
arg: Str('remote_cn', cli_name='remote_name')
option: Flag('enable_compat', autofill=True, default=False)
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: trust_fetch_domains/1
args: 1,7,4
arg: Str('cn', cli_name='realm')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('realm_admin?', cli_name='admin')
option: Password('realm_passwd?', cli_name='password', confirm=False)
option: Str('realm_server?', cli_name='server')
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: trust_find/1
args: 1,11,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='realm')
option: Str('ipantflatname?', autofill=False, cli_name='flat_name')
option: Str('ipantsidblacklistincoming*', autofill=False, cli_name='sid_blacklist_incoming')
option: Str('ipantsidblacklistoutgoing*', autofill=False, cli_name='sid_blacklist_outgoing')
option: Str('ipanttrusteddomainsid?', autofill=False, cli_name='sid')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: trust_mod/1
args: 1,10,3
arg: Str('cn', cli_name='realm')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('ipantadditionalsuffixes*', autofill=False, cli_name='upn_suffixes')
option: Str('ipantsidblacklistincoming*', autofill=False, cli_name='sid_blacklist_incoming')
option: Str('ipantsidblacklistoutgoing*', autofill=False, cli_name='sid_blacklist_outgoing')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: trust_resolve/1
args: 0,4,1
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('sids+')
option: Str('version?')
output: ListOfEntries('result')
command: trust_show/1
args: 1,4,3
arg: Str('cn', cli_name='realm')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: trustconfig_mod/1
args: 0,9,3
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('ipantfallbackprimarygroup?', autofill=False, cli_name='fallback_primary_group')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: StrEnum('trust_type', autofill=True, cli_name='type', default=u'ad', values=[u'ad'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: trustconfig_show/1
args: 0,5,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: StrEnum('trust_type', autofill=True, cli_name='type', default=u'ad', values=[u'ad'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('value', type=[<type 'unicode'>])
command: trustdomain_add/1
args: 2,8,3
arg: Str('trustcn', cli_name='trust')
arg: Str('cn', cli_name='domain')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('ipantflatname?', cli_name='flat_name')
option: Str('ipanttrusteddomainsid?', cli_name='sid')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: StrEnum('trust_type', autofill=True, cli_name='type', default=u'ad', values=[u'ad'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: trustdomain_del/1
args: 2,2,3
arg: Str('trustcn', cli_name='trust')
arg: Str('cn+', cli_name='domain')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: trustdomain_disable/1
args: 2,1,3
arg: Str('trustcn', cli_name='trust')
arg: Str('cn', cli_name='domain')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: trustdomain_enable/1
args: 2,1,3
arg: Str('trustcn', cli_name='trust')
arg: Str('cn', cli_name='domain')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: trustdomain_find/1
args: 2,9,4
arg: Str('trustcn', cli_name='trust')
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='domain')
option: Str('ipantflatname?', autofill=False, cli_name='flat_name')
option: Str('ipanttrusteddomainsid?', autofill=False, cli_name='sid')
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: trustdomain_mod/1
args: 2,10,3
arg: Str('trustcn', cli_name='trust')
arg: Str('cn', cli_name='domain')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('ipantflatname?', autofill=False, cli_name='flat_name')
option: Str('ipanttrusteddomainsid?', autofill=False, cli_name='sid')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: StrEnum('trust_type', autofill=True, cli_name='type', default=u'ad', values=[u'ad'])
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_add/1
args: 1,48,3
arg: Str('uid', cli_name='login')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('carlicense*')
option: Str('cn', autofill=True)
option: Str('departmentnumber*')
option: Str('displayname?', autofill=True)
option: Str('employeenumber?')
option: Str('employeetype?')
option: Str('facsimiletelephonenumber*', cli_name='fax')
option: Str('gecos?', autofill=True)
option: Int('gidnumber?')
option: Str('givenname', cli_name='first')
option: Str('homedirectory?', cli_name='homedir')
option: Str('initials?', autofill=True)
option: Str('ipaidpconfiglink?', cli_name='idp')
option: Str('ipaidpsub?', cli_name='idp_user_id')
option: Str('ipasshpubkey*', cli_name='sshpubkey')
option: Str('ipatokenradiusconfiglink?', cli_name='radius')
option: Str('ipatokenradiususername?', cli_name='radius_username')
option: StrEnum('ipauserauthtype*', cli_name='user_auth_type', values=[u'password', u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: DateTime('krbpasswordexpiration?', cli_name='password_expiration')
option: DateTime('krbprincipalexpiration?', cli_name='principal_expiration')
option: Principal('krbprincipalname*', autofill=True, cli_name='principal')
option: Str('l?', cli_name='city')
option: Str('loginshell?', cli_name='shell')
option: Str('mail*', cli_name='email')
option: Str('manager?')
option: Str('mobile*')
option: Flag('no_members', autofill=True, default=False)
option: Flag('noprivate', autofill=True, cli_name='noprivate', default=False)
option: Bool('nsaccountlock?', cli_name='disabled', default=False)
option: Str('ou?', cli_name='orgunit')
option: Str('pager*')
option: Str('postalcode?')
option: Str('preferredlanguage?')
option: Flag('random?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('sn', cli_name='last')
option: Str('st?', cli_name='state')
option: Str('street?', cli_name='street')
option: Str('telephonenumber*', cli_name='phone')
option: Str('title?')
option: Int('uidnumber?', cli_name='uid')
option: Certificate('usercertificate*', cli_name='certificate')
option: Str('userclass*', cli_name='class')
option: Password('userpassword?', cli_name='password')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_add_cert/1
args: 1,5,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_add_certmapdata/1
args: 2,7,3
arg: Str('uid', cli_name='login')
arg: Str('ipacertmapdata*', alwaysask=False, cli_name='certmapdata')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Certificate('certificate*', cli_name='certificate')
option: DNParam('issuer?', cli_name='issuer')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: DNParam('subject?', cli_name='subject')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_add_manager/1
args: 1,5,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: user_add_passkey/1
args: 2,4,3
arg: Str('uid', cli_name='login')
arg: Str('ipapasskey+', alwaysask=True, cli_name='passkey')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_add_principal/1
args: 2,4,3
arg: Str('uid', cli_name='login')
arg: Principal('krbprincipalname+', alwaysask=True, autofill=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_del/1
args: 1,3,3
arg: Str('uid+', cli_name='login')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Bool('preserve?')
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: user_disable/1
args: 1,1,3
arg: Str('uid', cli_name='login')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_enable/1
args: 1,1,3
arg: Str('uid', cli_name='login')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_find/1
args: 1,65,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('carlicense*', autofill=False)
option: Str('cn?', autofill=False)
option: Str('departmentnumber*', autofill=False)
option: Str('displayname?', autofill=False)
option: Str('employeenumber?', autofill=False)
option: Str('employeetype?', autofill=False)
option: Str('facsimiletelephonenumber*', autofill=False, cli_name='fax')
option: Str('gecos?', autofill=False)
option: Int('gidnumber?', autofill=False)
option: Str('givenname?', autofill=False, cli_name='first')
option: Str('homedirectory?', autofill=False, cli_name='homedir')
option: Str('in_group*', cli_name='in_groups')
option: Str('in_hbacrule*', cli_name='in_hbacrules')
option: Str('in_netgroup*', cli_name='in_netgroups')
option: Str('in_role*', cli_name='in_roles')
option: Str('in_subid*', cli_name='in_subids')
option: Str('in_sudorule*', cli_name='in_sudorules')
option: Str('initials?', autofill=False)
option: Str('ipaidpconfiglink?', autofill=False, cli_name='idp')
option: Str('ipaidpsub?', autofill=False, cli_name='idp_user_id')
option: Str('ipanthomedirectory?', autofill=False, cli_name='smb_home_dir')
option: StrEnum('ipanthomedirectorydrive?', autofill=False, cli_name='smb_home_drive', values=[u'A:', u'B:', u'C:', u'D:', u'E:', u'F:', u'G:', u'H:', u'I:', u'J:', u'K:', u'L:', u'M:', u'N:', u'O:', u'P:', u'Q:', u'R:', u'S:', u'T:', u'U:', u'V:', u'W:', u'X:', u'Y:', u'Z:'])
option: Str('ipantlogonscript?', autofill=False, cli_name='smb_logon_script')
option: Str('ipantprofilepath?', autofill=False, cli_name='smb_profile_path')
option: Str('ipatokenradiusconfiglink?', autofill=False, cli_name='radius')
option: Str('ipatokenradiususername?', autofill=False, cli_name='radius_username')
option: StrEnum('ipauserauthtype*', autofill=False, cli_name='user_auth_type', values=[u'password', u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: DateTime('krbpasswordexpiration?', autofill=False, cli_name='password_expiration')
option: DateTime('krbprincipalexpiration?', autofill=False, cli_name='principal_expiration')
option: Principal('krbprincipalname*', autofill=False, cli_name='principal')
option: Str('l?', autofill=False, cli_name='city')
option: Str('loginshell?', autofill=False, cli_name='shell')
option: Str('mail*', autofill=False, cli_name='email')
option: Str('manager?', autofill=False)
option: Str('mobile*', autofill=False)
option: Flag('no_members', autofill=True, default=True)
option: Str('not_in_group*', cli_name='not_in_groups')
option: Str('not_in_hbacrule*', cli_name='not_in_hbacrules')
option: Str('not_in_netgroup*', cli_name='not_in_netgroups')
option: Str('not_in_role*', cli_name='not_in_roles')
option: Str('not_in_subid*', cli_name='not_in_subids')
option: Str('not_in_sudorule*', cli_name='not_in_sudorules')
option: Bool('nsaccountlock?', autofill=False, cli_name='disabled', default=False)
option: Str('ou?', autofill=False, cli_name='orgunit')
option: Str('pager*', autofill=False)
option: Flag('pkey_only?', autofill=True, default=False)
option: Str('postalcode?', autofill=False)
option: Str('preferredlanguage?', autofill=False)
option: Bool('preserved?', autofill=False, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Int('sizelimit?', autofill=False)
option: Str('sn?', autofill=False, cli_name='last')
option: Str('st?', autofill=False, cli_name='state')
option: Str('street?', autofill=False, cli_name='street')
option: Str('telephonenumber*', autofill=False, cli_name='phone')
option: Int('timelimit?', autofill=False)
option: Str('title?', autofill=False)
option: Str('uid?', autofill=False, cli_name='login')
option: Int('uidnumber?', autofill=False, cli_name='uid')
option: Certificate('usercertificate*', autofill=False, cli_name='certificate')
option: Str('userclass*', autofill=False, cli_name='class')
option: Password('userpassword?', autofill=False, cli_name='password')
option: Str('version?')
option: Flag('whoami', autofill=True, default=False)
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: user_mod/1
args: 1,54,3
arg: Str('uid', cli_name='login')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('carlicense*', autofill=False)
option: Str('cn?', autofill=False)
option: Str('delattr*', cli_name='delattr')
option: Str('departmentnumber*', autofill=False)
option: Str('displayname?', autofill=False)
option: Str('employeenumber?', autofill=False)
option: Str('employeetype?', autofill=False)
option: Str('facsimiletelephonenumber*', autofill=False, cli_name='fax')
option: Str('gecos?', autofill=False)
option: Int('gidnumber?', autofill=False)
option: Str('givenname?', autofill=False, cli_name='first')
option: Str('homedirectory?', autofill=False, cli_name='homedir')
option: Str('initials?', autofill=False)
option: Str('ipaidpconfiglink?', autofill=False, cli_name='idp')
option: Str('ipaidpsub?', autofill=False, cli_name='idp_user_id')
option: Str('ipanthomedirectory?', autofill=False, cli_name='smb_home_dir')
option: StrEnum('ipanthomedirectorydrive?', autofill=False, cli_name='smb_home_drive', values=[u'A:', u'B:', u'C:', u'D:', u'E:', u'F:', u'G:', u'H:', u'I:', u'J:', u'K:', u'L:', u'M:', u'N:', u'O:', u'P:', u'Q:', u'R:', u'S:', u'T:', u'U:', u'V:', u'W:', u'X:', u'Y:', u'Z:'])
option: Str('ipantlogonscript?', autofill=False, cli_name='smb_logon_script')
option: Str('ipantprofilepath?', autofill=False, cli_name='smb_profile_path')
option: Str('ipasshpubkey*', autofill=False, cli_name='sshpubkey')
option: Str('ipatokenradiusconfiglink?', autofill=False, cli_name='radius')
option: Str('ipatokenradiususername?', autofill=False, cli_name='radius_username')
option: StrEnum('ipauserauthtype*', autofill=False, cli_name='user_auth_type', values=[u'password', u'radius', u'otp', u'pkinit', u'hardened', u'idp', u'passkey'])
option: DateTime('krbpasswordexpiration?', autofill=False, cli_name='password_expiration')
option: DateTime('krbprincipalexpiration?', autofill=False, cli_name='principal_expiration')
option: Principal('krbprincipalname*', autofill=False, cli_name='principal')
option: Str('l?', autofill=False, cli_name='city')
option: Str('loginshell?', autofill=False, cli_name='shell')
option: Str('mail*', autofill=False, cli_name='email')
option: Str('manager?', autofill=False)
option: Str('mobile*', autofill=False)
option: Flag('no_members', autofill=True, default=False)
option: Bool('nsaccountlock?', autofill=False, cli_name='disabled', default=False)
option: Str('ou?', autofill=False, cli_name='orgunit')
option: Str('pager*', autofill=False)
option: Str('postalcode?', autofill=False)
option: Str('preferredlanguage?', autofill=False)
option: Flag('random?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('rename?', cli_name='rename')
option: Flag('rights', autofill=True, default=False)
option: Str('setattr*', cli_name='setattr')
option: Str('sn?', autofill=False, cli_name='last')
option: Str('st?', autofill=False, cli_name='state')
option: Str('street?', autofill=False, cli_name='street')
option: Str('telephonenumber*', autofill=False, cli_name='phone')
option: Str('title?', autofill=False)
option: Int('uidnumber?', autofill=False, cli_name='uid')
option: Certificate('usercertificate*', autofill=False, cli_name='certificate')
option: Str('userclass*', autofill=False, cli_name='class')
option: Password('userpassword?', autofill=False, cli_name='password')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_remove_cert/1
args: 1,5,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Certificate('usercertificate+', alwaysask=True, cli_name='certificate')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_remove_certmapdata/1
args: 2,7,3
arg: Str('uid', cli_name='login')
arg: Str('ipacertmapdata*', alwaysask=False, cli_name='certmapdata')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Certificate('certificate*', cli_name='certificate')
option: DNParam('issuer?', cli_name='issuer')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: DNParam('subject?', cli_name='subject')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_remove_manager/1
args: 1,5,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: user_remove_passkey/1
args: 2,4,3
arg: Str('uid', cli_name='login')
arg: Str('ipapasskey+', alwaysask=True, cli_name='passkey')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_remove_principal/1
args: 2,4,3
arg: Str('uid', cli_name='login')
arg: Principal('krbprincipalname+', alwaysask=True, autofill=True, cli_name='principal')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_show/1
args: 1,6,3
arg: Str('uid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Str('out?')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_stage/1
args: 1,2,3
arg: Str('uid+', cli_name='login')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: user_status/1
args: 1,3,4
arg: Str('useruid', cli_name='login')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: user_undel/1
args: 1,1,3
arg: Str('uid', cli_name='login')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: user_unlock/1
args: 1,1,3
arg: Str('uid', cli_name='login')
option: Str('version?')
output: Output('result', type=[<type 'bool'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: vault_add_internal/1
args: 1,13,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('description?', cli_name='desc')
option: Bytes('ipavaultpublickey?', cli_name='public_key')
option: Bytes('ipavaultsalt?', cli_name='salt')
option: StrEnum('ipavaulttype?', autofill=True, cli_name='type', default=u'symmetric', values=[u'standard', u'symmetric', u'asymmetric'])
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Str('setattr*', cli_name='setattr')
option: Flag('shared?', autofill=True, default=False)
option: Str('username?', cli_name='user')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: vault_add_member/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Str('services*', alwaysask=True, cli_name='services')
option: Flag('shared?', autofill=True, default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('username?', cli_name='user')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: vault_add_owner/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Str('services*', alwaysask=True, cli_name='services')
option: Flag('shared?', autofill=True, default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('username?', cli_name='user')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: vault_archive_internal/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Bytes('nonce')
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Bytes('session_key')
option: Flag('shared?', autofill=True, default=False)
option: Str('username?', cli_name='user')
option: Bytes('vault_data')
option: Str('version?')
option: StrEnum('wrapping_algo?', autofill=True, default=u'des-ede3-cbc', values=[u'aes-128-cbc', u'des-ede3-cbc'])
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: vault_del/1
args: 1,5,3
arg: Str('cn+', cli_name='name')
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Principal('service?')
option: Flag('shared?', autofill=True, default=False)
option: Str('username?', cli_name='user')
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: vault_find/1
args: 1,15,4
arg: Str('criteria?')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('cn?', autofill=False, cli_name='name')
option: Str('description?', autofill=False, cli_name='desc')
option: StrEnum('ipavaulttype?', autofill=False, cli_name='type', default=u'symmetric', values=[u'standard', u'symmetric', u'asymmetric'])
option: Flag('no_members', autofill=True, default=True)
option: Flag('pkey_only?', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Flag('services?', autofill=True, default=False)
option: Flag('shared?', autofill=True, default=False)
option: Int('sizelimit?', autofill=False)
option: Int('timelimit?', autofill=False)
option: Str('username?', cli_name='user')
option: Flag('users?', autofill=True, default=False)
option: Str('version?')
output: Output('count', type=[<type 'int'>])
output: ListOfEntries('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: Output('truncated', type=[<type 'bool'>])
command: vault_mod_internal/1
args: 1,15,3
arg: Str('cn', cli_name='name')
option: Str('addattr*', cli_name='addattr')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('delattr*', cli_name='delattr')
option: Str('description?', autofill=False, cli_name='desc')
option: Bytes('ipavaultpublickey?', autofill=False, cli_name='public_key')
option: Bytes('ipavaultsalt?', autofill=False, cli_name='salt')
option: StrEnum('ipavaulttype?', autofill=False, cli_name='type', default=u'symmetric', values=[u'standard', u'symmetric', u'asymmetric'])
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Principal('service?')
option: Str('setattr*', cli_name='setattr')
option: Flag('shared?', autofill=True, default=False)
option: Str('username?', cli_name='user')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: vault_remove_member/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Str('services*', alwaysask=True, cli_name='services')
option: Flag('shared?', autofill=True, default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('username?', cli_name='user')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: vault_remove_owner/1
args: 1,10,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Str('services*', alwaysask=True, cli_name='services')
option: Flag('shared?', autofill=True, default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('username?', cli_name='user')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: vault_retrieve_internal/1
args: 1,8,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Bytes('session_key')
option: Flag('shared?', autofill=True, default=False)
option: Str('username?', cli_name='user')
option: Str('version?')
option: StrEnum('wrapping_algo?', autofill=True, default=u'des-ede3-cbc', values=[u'aes-128-cbc', u'des-ede3-cbc'])
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: vault_show/1
args: 1,8,3
arg: Str('cn', cli_name='name')
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Principal('service?')
option: Flag('shared?', autofill=True, default=False)
option: Str('username?', cli_name='user')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: vaultconfig_show/1
args: 0,4,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Str('transport_out?')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: vaultcontainer_add_owner/1
args: 0,10,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Str('services*', alwaysask=True, cli_name='services')
option: Flag('shared?', autofill=True, default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('username?', cli_name='user')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: vaultcontainer_del/1
args: 0,5,3
option: Flag('continue', autofill=True, cli_name='continue', default=False)
option: Principal('service?')
option: Flag('shared?', autofill=True, default=False)
option: Str('username?', cli_name='user')
option: Str('version?')
output: Output('result', type=[<type 'dict'>])
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: ListOfPrimaryKeys('value')
command: vaultcontainer_remove_owner/1
args: 0,10,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Str('group*', alwaysask=True, cli_name='groups')
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Principal('service?')
option: Str('services*', alwaysask=True, cli_name='services')
option: Flag('shared?', autofill=True, default=False)
option: Str('user*', alwaysask=True, cli_name='users')
option: Str('username?', cli_name='user')
option: Str('version?')
output: Output('completed', type=[<type 'int'>])
output: Output('failed', type=[<type 'dict'>])
output: Entry('result')
command: vaultcontainer_show/1
args: 0,8,3
option: Flag('all', autofill=True, cli_name='all', default=False)
option: Flag('no_members', autofill=True, default=False)
option: Flag('raw', autofill=True, cli_name='raw', default=False)
option: Flag('rights', autofill=True, default=False)
option: Principal('service?')
option: Flag('shared?', autofill=True, default=False)
option: Str('username?', cli_name='user')
option: Str('version?')
output: Entry('result')
output: Output('summary', type=[<type 'unicode'>, <type 'NoneType'>])
output: PrimaryKey('value')
command: whoami/1
args: 0,1,3
option: Str('version?')
output: Output('arguments', type=[<type 'list'>, <type 'tuple'>])
output: Output('command', type=[<type 'unicode'>])
output: Output('object', type=[<type 'unicode'>])
default: aci/1
default: aci_add/1
default: aci_del/1
default: aci_find/1
default: aci_mod/1
default: aci_rename/1
default: aci_show/1
default: adtrust_is_enabled/1
default: automember/1
default: automember_add/1
default: automember_add_condition/1
default: automember_default_group/1
default: automember_default_group_remove/1
default: automember_default_group_set/1
default: automember_default_group_show/1
default: automember_del/1
default: automember_find/1
default: automember_find_orphans/1
default: automember_mod/1
default: automember_rebuild/1
default: automember_remove_condition/1
default: automember_show/1
default: automember_task/1
default: automountkey/1
default: automountkey_add/1
default: automountkey_del/1
default: automountkey_find/1
default: automountkey_mod/1
default: automountkey_show/1
default: automountlocation/1
default: automountlocation_add/1
default: automountlocation_del/1
default: automountlocation_find/1
default: automountlocation_show/1
default: automountlocation_tofiles/1
default: automountmap/1
default: automountmap_add/1
default: automountmap_add_indirect/1
default: automountmap_del/1
default: automountmap_find/1
default: automountmap_mod/1
default: automountmap_show/1
default: batch/1
default: ca/1
default: ca_add/1
default: ca_del/1
default: ca_disable/1
default: ca_enable/1
default: ca_find/1
default: ca_is_enabled/1
default: ca_mod/1
default: ca_show/1
default: caacl/1
default: caacl_add/1
default: caacl_add_ca/1
default: caacl_add_host/1
default: caacl_add_profile/1
default: caacl_add_service/1
default: caacl_add_user/1
default: caacl_del/1
default: caacl_disable/1
default: caacl_enable/1
default: caacl_find/1
default: caacl_mod/1
default: caacl_remove_ca/1
default: caacl_remove_host/1
default: caacl_remove_profile/1
default: caacl_remove_service/1
default: caacl_remove_user/1
default: caacl_show/1
default: cert/1
default: cert_find/1
default: cert_remove_hold/1
default: cert_request/1
default: cert_revoke/1
default: cert_show/1
default: cert_status/1
default: certmap/1
default: certmap_match/1
default: certmapconfig/1
default: certmapconfig_mod/1
default: certmapconfig_show/1
default: certmaprule/1
default: certmaprule_add/1
default: certmaprule_del/1
default: certmaprule_disable/1
default: certmaprule_enable/1
default: certmaprule_find/1
default: certmaprule_mod/1
default: certmaprule_show/1
default: certprofile/1
default: certprofile_del/1
default: certprofile_find/1
default: certprofile_import/1
default: certprofile_mod/1
default: certprofile_show/1
default: certreq/1
default: class/1
default: class_find/1
default: class_show/1
default: command/1
default: command_defaults/1
default: command_find/1
default: command_show/1
default: compat_is_enabled/1
default: config/1
default: config_mod/1
default: config_show/1
default: cosentry/1
default: cosentry_add/1
default: cosentry_del/1
default: cosentry_find/1
default: cosentry_mod/1
default: cosentry_show/1
default: delegation/1
default: delegation_add/1
default: delegation_del/1
default: delegation_find/1
default: delegation_mod/1
default: delegation_show/1
default: dns_is_enabled/1
default: dns_resolve/1
default: dns_system_records/1
default: dns_update_system_records/1
default: dnsa6record/1
default: dnsaaaarecord/1
default: dnsafsdbrecord/1
default: dnsaplrecord/1
default: dnsarecord/1
default: dnscertrecord/1
default: dnscnamerecord/1
default: dnsconfig/1
default: dnsconfig_mod/1
default: dnsconfig_show/1
default: dnsdhcidrecord/1
default: dnsdlvrecord/1
default: dnsdnamerecord/1
default: dnsdsrecord/1
default: dnsforwardzone/1
default: dnsforwardzone_add/1
default: dnsforwardzone_add_permission/1
default: dnsforwardzone_del/1
default: dnsforwardzone_disable/1
default: dnsforwardzone_enable/1
default: dnsforwardzone_find/1
default: dnsforwardzone_mod/1
default: dnsforwardzone_remove_permission/1
default: dnsforwardzone_show/1
default: dnshiprecord/1
default: dnsipseckeyrecord/1
default: dnskeyrecord/1
default: dnskxrecord/1
default: dnslocrecord/1
default: dnsmxrecord/1
default: dnsnaptrrecord/1
default: dnsnsecrecord/1
default: dnsnsrecord/1
default: dnsptrrecord/1
default: dnsrecord/1
default: dnsrecord_add/1
default: dnsrecord_del/1
default: dnsrecord_delentry/1
default: dnsrecord_find/1
default: dnsrecord_mod/1
default: dnsrecord_show/1
default: dnsrecord_split_parts/1
default: dnsrprecord/1
default: dnsrrsigrecord/1
default: dnsserver/1
default: dnsserver_add/1
default: dnsserver_del/1
default: dnsserver_find/1
default: dnsserver_mod/1
default: dnsserver_show/1
default: dnssigrecord/1
default: dnsspfrecord/1
default: dnssrvrecord/1
default: dnssshfprecord/1
default: dnstlsarecord/1
default: dnstxtrecord/1
default: dnsurirecord/1
default: dnszone/1
default: dnszone_add/1
default: dnszone_add_permission/1
default: dnszone_del/1
default: dnszone_disable/1
default: dnszone_enable/1
default: dnszone_find/1
default: dnszone_mod/1
default: dnszone_remove_permission/1
default: dnszone_show/1
default: domainlevel_get/1
default: domainlevel_set/1
default: env/1
default: group/1
default: group_add/1
default: group_add_member/1
default: group_add_member_manager/1
default: group_del/1
default: group_detach/1
default: group_find/1
default: group_mod/1
default: group_remove_member/1
default: group_remove_member_manager/1
default: group_show/1
default: hbacrule/1
default: hbacrule_add/1
default: hbacrule_add_host/1
default: hbacrule_add_service/1
default: hbacrule_add_sourcehost/1
default: hbacrule_add_user/1
default: hbacrule_del/1
default: hbacrule_disable/1
default: hbacrule_enable/1
default: hbacrule_find/1
default: hbacrule_mod/1
default: hbacrule_remove_host/1
default: hbacrule_remove_service/1
default: hbacrule_remove_sourcehost/1
default: hbacrule_remove_user/1
default: hbacrule_show/1
default: hbacsvc/1
default: hbacsvc_add/1
default: hbacsvc_del/1
default: hbacsvc_find/1
default: hbacsvc_mod/1
default: hbacsvc_show/1
default: hbacsvcgroup/1
default: hbacsvcgroup_add/1
default: hbacsvcgroup_add_member/1
default: hbacsvcgroup_del/1
default: hbacsvcgroup_find/1
default: hbacsvcgroup_mod/1
default: hbacsvcgroup_remove_member/1
default: hbacsvcgroup_show/1
default: hbactest/1
default: host/1
default: host_add/1
default: host_add_cert/1
default: host_add_delegation/1
default: host_add_managedby/1
default: host_add_principal/1
default: host_allow_add_delegation/1
default: host_allow_create_keytab/1
default: host_allow_retrieve_keytab/1
default: host_del/1
default: host_disable/1
default: host_disallow_add_delegation/1
default: host_disallow_create_keytab/1
default: host_disallow_retrieve_keytab/1
default: host_find/1
default: host_mod/1
default: host_remove_cert/1
default: host_remove_delegation/1
default: host_remove_managedby/1
default: host_remove_principal/1
default: host_show/1
default: hostgroup/1
default: hostgroup_add/1
default: hostgroup_add_member/1
default: hostgroup_add_member_manager/1
default: hostgroup_del/1
default: hostgroup_find/1
default: hostgroup_mod/1
default: hostgroup_remove_member/1
default: hostgroup_remove_member_manager/1
default: hostgroup_show/1
default: i18n_messages/1
default: idoverridegroup/1
default: idoverridegroup_add/1
default: idoverridegroup_del/1
default: idoverridegroup_find/1
default: idoverridegroup_mod/1
default: idoverridegroup_show/1
default: idoverrideuser/1
default: idoverrideuser_add/1
default: idoverrideuser_add_cert/1
default: idoverrideuser_del/1
default: idoverrideuser_find/1
default: idoverrideuser_mod/1
default: idoverrideuser_remove_cert/1
default: idoverrideuser_show/1
default: idp/1
default: idp_add/1
default: idp_del/1
default: idp_find/1
default: idp_mod/1
default: idp_show/1
default: idrange/1
default: idrange_add/1
default: idrange_del/1
default: idrange_find/1
default: idrange_mod/1
default: idrange_show/1
default: idview/1
default: idview_add/1
default: idview_apply/1
default: idview_del/1
default: idview_find/1
default: idview_mod/1
default: idview_show/1
default: idview_unapply/1
default: join/1
default: json_metadata/1
default: kra_is_enabled/1
default: krbtpolicy/1
default: krbtpolicy_mod/1
default: krbtpolicy_reset/1
default: krbtpolicy_show/1
default: location/1
default: location_add/1
default: location_del/1
default: location_find/1
default: location_mod/1
default: location_show/1
default: metaobject/1
default: migrate_ds/1
default: netgroup/1
default: netgroup_add/1
default: netgroup_add_member/1
default: netgroup_del/1
default: netgroup_find/1
default: netgroup_mod/1
default: netgroup_remove_member/1
default: netgroup_show/1
default: otpconfig/1
default: otpconfig_mod/1
default: otpconfig_show/1
default: otptoken/1
default: otptoken_add/1
default: otptoken_add_managedby/1
default: otptoken_del/1
default: otptoken_find/1
default: otptoken_mod/1
default: otptoken_remove_managedby/1
default: otptoken_show/1
default: output/1
default: output_find/1
default: output_show/1
default: param/1
default: param_find/1
default: param_show/1
default: passkeyconfig/1
default: passkeyconfig_mod/1
default: passkeyconfig_show/1
default: passwd/1
default: permission/1
default: permission_add/1
default: permission_add_member/1
default: permission_add_noaci/1
default: permission_del/1
default: permission_find/1
default: permission_mod/1
default: permission_remove_member/1
default: permission_show/1
default: ping/1
default: pkinit/1
default: pkinit_status/1
default: plugins/1
default: privilege/1
default: privilege_add/1
default: privilege_add_member/1
default: privilege_add_permission/1
default: privilege_del/1
default: privilege_find/1
default: privilege_mod/1
default: privilege_remove_member/1
default: privilege_remove_permission/1
default: privilege_show/1
default: pwpolicy/1
default: pwpolicy_add/1
default: pwpolicy_del/1
default: pwpolicy_find/1
default: pwpolicy_mod/1
default: pwpolicy_show/1
default: radiusproxy/1
default: radiusproxy_add/1
default: radiusproxy_del/1
default: radiusproxy_find/1
default: radiusproxy_mod/1
default: radiusproxy_show/1
default: realmdomains/1
default: realmdomains_mod/1
default: realmdomains_show/1
default: role/1
default: role_add/1
default: role_add_member/1
default: role_add_privilege/1
default: role_del/1
default: role_find/1
default: role_mod/1
default: role_remove_member/1
default: role_remove_privilege/1
default: role_show/1
default: schema/1
default: selfservice/1
default: selfservice_add/1
default: selfservice_del/1
default: selfservice_find/1
default: selfservice_mod/1
default: selfservice_show/1
default: selinuxusermap/1
default: selinuxusermap_add/1
default: selinuxusermap_add_host/1
default: selinuxusermap_add_user/1
default: selinuxusermap_del/1
default: selinuxusermap_disable/1
default: selinuxusermap_enable/1
default: selinuxusermap_find/1
default: selinuxusermap_mod/1
default: selinuxusermap_remove_host/1
default: selinuxusermap_remove_user/1
default: selinuxusermap_show/1
default: server/1
default: server_conncheck/1
default: server_del/1
default: server_find/1
default: server_mod/1
default: server_role/1
default: server_role_find/1
default: server_role_show/1
default: server_show/1
default: server_state/1
default: service/1
default: service_add/1
default: service_add_cert/1
default: service_add_delegation/1
default: service_add_host/1
default: service_add_principal/1
default: service_add_smb/1
default: service_allow_add_delegation/1
default: service_allow_create_keytab/1
default: service_allow_retrieve_keytab/1
default: service_del/1
default: service_disable/1
default: service_disallow_add_delegation/1
default: service_disallow_create_keytab/1
default: service_disallow_retrieve_keytab/1
default: service_find/1
default: service_mod/1
default: service_remove_cert/1
default: service_remove_delegation/1
default: service_remove_host/1
default: service_remove_principal/1
default: service_show/1
default: servicedelegationrule/1
default: servicedelegationrule_add/1
default: servicedelegationrule_add_member/1
default: servicedelegationrule_add_target/1
default: servicedelegationrule_del/1
default: servicedelegationrule_find/1
default: servicedelegationrule_remove_member/1
default: servicedelegationrule_remove_target/1
default: servicedelegationrule_show/1
default: servicedelegationtarget/1
default: servicedelegationtarget_add/1
default: servicedelegationtarget_add_member/1
default: servicedelegationtarget_del/1
default: servicedelegationtarget_find/1
default: servicedelegationtarget_remove_member/1
default: servicedelegationtarget_show/1
default: servrole/1
default: session_logout/1
default: sidgen_was_run/1
default: stageuser/1
default: stageuser_activate/1
default: stageuser_add/1
default: stageuser_add_cert/1
default: stageuser_add_certmapdata/1
default: stageuser_add_manager/1
default: stageuser_add_passkey/1
default: stageuser_add_principal/1
default: stageuser_del/1
default: stageuser_find/1
default: stageuser_mod/1
default: stageuser_remove_cert/1
default: stageuser_remove_certmapdata/1
default: stageuser_remove_manager/1
default: stageuser_remove_passkey/1
default: stageuser_remove_principal/1
default: stageuser_show/1
default: subid/1
default: subid_add/1
default: subid_del/1
default: subid_find/1
default: subid_generate/1
default: subid_match/1
default: subid_mod/1
default: subid_show/1
default: subid_stats/1
default: sudocmd/1
default: sudocmd_add/1
default: sudocmd_del/1
default: sudocmd_find/1
default: sudocmd_mod/1
default: sudocmd_show/1
default: sudocmdgroup/1
default: sudocmdgroup_add/1
default: sudocmdgroup_add_member/1
default: sudocmdgroup_del/1
default: sudocmdgroup_find/1
default: sudocmdgroup_mod/1
default: sudocmdgroup_remove_member/1
default: sudocmdgroup_show/1
default: sudorule/1
default: sudorule_add/1
default: sudorule_add_allow_command/1
default: sudorule_add_deny_command/1
default: sudorule_add_host/1
default: sudorule_add_option/1
default: sudorule_add_runasgroup/1
default: sudorule_add_runasuser/1
default: sudorule_add_user/1
default: sudorule_del/1
default: sudorule_disable/1
default: sudorule_enable/1
default: sudorule_find/1
default: sudorule_mod/1
default: sudorule_remove_allow_command/1
default: sudorule_remove_deny_command/1
default: sudorule_remove_host/1
default: sudorule_remove_option/1
default: sudorule_remove_runasgroup/1
default: sudorule_remove_runasuser/1
default: sudorule_remove_user/1
default: sudorule_show/1
default: topic/1
default: topic_find/1
default: topic_show/1
default: topologysegment/1
default: topologysegment_add/1
default: topologysegment_del/1
default: topologysegment_find/1
default: topologysegment_mod/1
default: topologysegment_reinitialize/1
default: topologysegment_show/1
default: topologysuffix/1
default: topologysuffix_add/1
default: topologysuffix_del/1
default: topologysuffix_find/1
default: topologysuffix_mod/1
default: topologysuffix_show/1
default: topologysuffix_verify/1
default: trust/1
default: trust_add/1
default: trust_del/1
default: trust_enable_agent/1
default: trust_fetch_domains/1
default: trust_find/1
default: trust_mod/1
default: trust_resolve/1
default: trust_show/1
default: trustconfig/1
default: trustconfig_mod/1
default: trustconfig_show/1
default: trustdomain/1
default: trustdomain_add/1
default: trustdomain_del/1
default: trustdomain_disable/1
default: trustdomain_enable/1
default: trustdomain_find/1
default: trustdomain_mod/1
default: user/1
default: user_add/1
default: user_add_cert/1
default: user_add_certmapdata/1
default: user_add_manager/1
default: user_add_passkey/1
default: user_add_principal/1
default: user_del/1
default: user_disable/1
default: user_enable/1
default: user_find/1
default: user_mod/1
default: user_remove_cert/1
default: user_remove_certmapdata/1
default: user_remove_manager/1
default: user_remove_passkey/1
default: user_remove_principal/1
default: user_show/1
default: user_stage/1
default: user_status/1
default: user_undel/1
default: user_unlock/1
default: userstatus/1
default: vault/1
default: vault_add_internal/1
default: vault_add_member/1
default: vault_add_owner/1
default: vault_archive_internal/1
default: vault_del/1
default: vault_find/1
default: vault_mod_internal/1
default: vault_remove_member/1
default: vault_remove_owner/1
default: vault_retrieve_internal/1
default: vault_show/1
default: vaultconfig/1
default: vaultconfig_show/1
default: vaultcontainer/1
default: vaultcontainer_add_owner/1
default: vaultcontainer_del/1
default: vaultcontainer_remove_owner/1
default: vaultcontainer_show/1
default: whoami/1
capability: vault_aes_keywrap 2.246
capability: messages 2.52
capability: optional_uid_params 2.54
capability: permissions2 2.69
capability: primary_key_types 2.83
capability: datetime_values 2.84
capability: dns_name_values 2.88
